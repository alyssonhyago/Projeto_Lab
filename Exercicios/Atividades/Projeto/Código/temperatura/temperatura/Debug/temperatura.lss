
temperatura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000010aa  0000113e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000211  00800112  00800112  00001150  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001180  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d24  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000887  00000000  00000000  00001f84  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c04  00000000  00000000  0000280b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  00003410  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008588  00000000  00000000  00003644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000048a  00000000  00000000  0000bbcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000c056  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002eb8  00000000  00000000  0000c0d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_21>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	ea ea       	ldi	r30, 0xAA	; 170
     25c:	f0 e1       	ldi	r31, 0x10	; 16
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a2 31       	cpi	r26, 0x12	; 18
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a2 e1       	ldi	r26, 0x12	; 18
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a3 32       	cpi	r26, 0x23	; 35
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 67 01 	call	0x2ce	; 0x2ce <main>
     27e:	0c 94 53 08 	jmp	0x10a6	; 0x10a6 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_21>:
float a = 0.001129241;
float b = 0.0002341077;
float c = 0.00000008775468;

ISR(ADC_vect)
{
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     28e:	0f 92       	push	r0
     290:	11 24       	eor	r1, r1
     292:	8f 93       	push	r24
     294:	9f 93       	push	r25
     296:	ef 93       	push	r30
     298:	ff 93       	push	r31
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	cd b7       	in	r28, 0x3d	; 61
     2a0:	de b7       	in	r29, 0x3e	; 62
	leitura_ADC = ADC;
     2a2:	88 e7       	ldi	r24, 0x78	; 120
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	fc 01       	movw	r30, r24
     2a8:	80 81       	ld	r24, Z
     2aa:	91 81       	ldd	r25, Z+1	; 0x01
     2ac:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
     2b0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
}
     2b4:	00 00       	nop
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	ff 91       	pop	r31
     2bc:	ef 91       	pop	r30
     2be:	9f 91       	pop	r25
     2c0:	8f 91       	pop	r24
     2c2:	0f 90       	pop	r0
     2c4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     2c8:	0f 90       	pop	r0
     2ca:	1f 90       	pop	r1
     2cc:	18 95       	reti

000002ce <main>:

int main(void)
{
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	cd b7       	in	r28, 0x3d	; 61
     2d4:	de b7       	in	r29, 0x3e	; 62
     2d6:	2e 97       	sbiw	r28, 0x0e	; 14
     2d8:	0f b6       	in	r0, 0x3f	; 63
     2da:	f8 94       	cli
     2dc:	de bf       	out	0x3e, r29	; 62
     2de:	0f be       	out	0x3f, r0	; 63
     2e0:	cd bf       	out	0x3d, r28	; 61
	//GPIO
	DDRB = 0xFF; // saida
     2e2:	84 e2       	ldi	r24, 0x24	; 36
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	2f ef       	ldi	r18, 0xFF	; 255
     2e8:	fc 01       	movw	r30, r24
     2ea:	20 83       	st	Z, r18
	DDRC = 0b00100000; // PINC5 como saida
     2ec:	87 e2       	ldi	r24, 0x27	; 39
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	20 e2       	ldi	r18, 0x20	; 32
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18
	PORTC = 0x00; // so C0 em baixo nivel
     2f6:	88 e2       	ldi	r24, 0x28	; 40
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	fc 01       	movw	r30, r24
     2fc:	10 82       	st	Z, r1

	//configurando o ADC
	ADMUX = 0b11000000; // tensao interna de ref(1.1v)
     2fe:	8c e7       	ldi	r24, 0x7C	; 124
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	20 ec       	ldi	r18, 0xC0	; 192
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18
	ADCSRA = 0b11101111;//habilita o AD, interrupção, conversao, prescaler 128
     308:	8a e7       	ldi	r24, 0x7A	; 122
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	2f ee       	ldi	r18, 0xEF	; 239
     30e:	fc 01       	movw	r30, r24
     310:	20 83       	st	Z, r18
	ADCSRB = 0x00;// conversão continua
     312:	8b e7       	ldi	r24, 0x7B	; 123
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	fc 01       	movw	r30, r24
     318:	10 82       	st	Z, r1
	DIDR0 = 0b00111110;// habilita o PC0 como entrada do ADC0
     31a:	8e e7       	ldi	r24, 0x7E	; 126
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	2e e3       	ldi	r18, 0x3E	; 62
     320:	fc 01       	movw	r30, r24
     322:	20 83       	st	Z, r18

	sei();
     324:	78 94       	sei
	nokia_lcd_init();
     326:	0e 94 63 03 	call	0x6c6	; 0x6c6 <nokia_lcd_init>
	
	while(1)
	{
		//Calculo do sensor LM35 Vout = 0.01 * T ;
		
		Celsius = (leitura_ADC/1023.0)*100;
     32a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
     32e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
     332:	cc 01       	movw	r24, r24
     334:	a0 e0       	ldi	r26, 0x00	; 0
     336:	b0 e0       	ldi	r27, 0x00	; 0
     338:	bc 01       	movw	r22, r24
     33a:	cd 01       	movw	r24, r26
     33c:	0e 94 14 07 	call	0xe28	; 0xe28 <__floatunsisf>
     340:	dc 01       	movw	r26, r24
     342:	cb 01       	movw	r24, r22
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 ec       	ldi	r19, 0xC0	; 192
     348:	4f e7       	ldi	r20, 0x7F	; 127
     34a:	54 e4       	ldi	r21, 0x44	; 68
     34c:	bc 01       	movw	r22, r24
     34e:	cd 01       	movw	r24, r26
     350:	0e 94 73 06 	call	0xce6	; 0xce6 <__divsf3>
     354:	dc 01       	movw	r26, r24
     356:	cb 01       	movw	r24, r22
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	48 ec       	ldi	r20, 0xC8	; 200
     35e:	52 e4       	ldi	r21, 0x42	; 66
     360:	bc 01       	movw	r22, r24
     362:	cd 01       	movw	r24, r26
     364:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     368:	dc 01       	movw	r26, r24
     36a:	cb 01       	movw	r24, r22
     36c:	80 93 1f 03 	sts	0x031F, r24	; 0x80031f <Celsius>
     370:	90 93 20 03 	sts	0x0320, r25	; 0x800320 <Celsius+0x1>
     374:	a0 93 21 03 	sts	0x0321, r26	; 0x800321 <Celsius+0x2>
     378:	b0 93 22 03 	sts	0x0322, r27	; 0x800322 <Celsius+0x3>

		nokia_lcd_clear();
     37c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <nokia_lcd_clear>
		int_to_str(Celsius, leitura_ADC_string);
     380:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <Celsius>
     384:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <Celsius+0x1>
     388:	a0 91 21 03 	lds	r26, 0x0321	; 0x800321 <Celsius+0x2>
     38c:	b0 91 22 03 	lds	r27, 0x0322	; 0x800322 <Celsius+0x3>
     390:	bc 01       	movw	r22, r24
     392:	cd 01       	movw	r24, r26
     394:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     398:	dc 01       	movw	r26, r24
     39a:	cb 01       	movw	r24, r22
     39c:	6a e1       	ldi	r22, 0x1A	; 26
     39e:	73 e0       	ldi	r23, 0x03	; 3
     3a0:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <int_to_str>
		nokia_lcd_write_string("Temp: ",1);
     3a4:	61 e0       	ldi	r22, 0x01	; 1
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	91 e0       	ldi	r25, 0x01	; 1
     3aa:	0e 94 16 06 	call	0xc2c	; 0xc2c <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0, 10);
     3ae:	6a e0       	ldi	r22, 0x0A	; 10
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	0e 94 39 06 	call	0xc72	; 0xc72 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(leitura_ADC_string, 1);
     3b6:	61 e0       	ldi	r22, 0x01	; 1
     3b8:	8a e1       	ldi	r24, 0x1A	; 26
     3ba:	93 e0       	ldi	r25, 0x03	; 3
     3bc:	0e 94 16 06 	call	0xc2c	; 0xc2c <nokia_lcd_write_string>
		nokia_lcd_write_string(" Celsius ",1);
     3c0:	61 e0       	ldi	r22, 0x01	; 1
     3c2:	87 e0       	ldi	r24, 0x07	; 7
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	0e 94 16 06 	call	0xc2c	; 0xc2c <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0, 20);
     3ca:	64 e1       	ldi	r22, 0x14	; 20
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	0e 94 39 06 	call	0xc72	; 0xc72 <nokia_lcd_set_cursor>
		nokia_lcd_render();
     3d2:	0e 94 4c 06 	call	0xc98	; 0xc98 <nokia_lcd_render>
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	aa e7       	ldi	r26, 0x7A	; 122
     3dc:	b4 e4       	ldi	r27, 0x44	; 68
     3de:	89 83       	std	Y+1, r24	; 0x01
     3e0:	9a 83       	std	Y+2, r25	; 0x02
     3e2:	ab 83       	std	Y+3, r26	; 0x03
     3e4:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4a e7       	ldi	r20, 0x7A	; 122
     3ec:	55 e4       	ldi	r21, 0x45	; 69
     3ee:	69 81       	ldd	r22, Y+1	; 0x01
     3f0:	7a 81       	ldd	r23, Y+2	; 0x02
     3f2:	8b 81       	ldd	r24, Y+3	; 0x03
     3f4:	9c 81       	ldd	r25, Y+4	; 0x04
     3f6:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	8d 83       	std	Y+5, r24	; 0x05
     400:	9e 83       	std	Y+6, r25	; 0x06
     402:	af 83       	std	Y+7, r26	; 0x07
     404:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	40 e8       	ldi	r20, 0x80	; 128
     40c:	5f e3       	ldi	r21, 0x3F	; 63
     40e:	6d 81       	ldd	r22, Y+5	; 0x05
     410:	7e 81       	ldd	r23, Y+6	; 0x06
     412:	8f 81       	ldd	r24, Y+7	; 0x07
     414:	98 85       	ldd	r25, Y+8	; 0x08
     416:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__cmpsf2>
     41a:	88 23       	and	r24, r24
     41c:	2c f4       	brge	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
		__ticks = 1;
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	9a 87       	std	Y+10, r25	; 0x0a
     424:	89 87       	std	Y+9, r24	; 0x09
     426:	3f c0       	rjmp	.+126    	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
	else if (__tmp > 65535)
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	3f ef       	ldi	r19, 0xFF	; 255
     42c:	4f e7       	ldi	r20, 0x7F	; 127
     42e:	57 e4       	ldi	r21, 0x47	; 71
     430:	6d 81       	ldd	r22, Y+5	; 0x05
     432:	7e 81       	ldd	r23, Y+6	; 0x06
     434:	8f 81       	ldd	r24, Y+7	; 0x07
     436:	98 85       	ldd	r25, Y+8	; 0x08
     438:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__gesf2>
     43c:	18 16       	cp	r1, r24
     43e:	4c f5       	brge	.+82     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	40 e2       	ldi	r20, 0x20	; 32
     446:	51 e4       	ldi	r21, 0x41	; 65
     448:	69 81       	ldd	r22, Y+1	; 0x01
     44a:	7a 81       	ldd	r23, Y+2	; 0x02
     44c:	8b 81       	ldd	r24, Y+3	; 0x03
     44e:	9c 81       	ldd	r25, Y+4	; 0x04
     450:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	bc 01       	movw	r22, r24
     45a:	cd 01       	movw	r24, r26
     45c:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     460:	dc 01       	movw	r26, r24
     462:	cb 01       	movw	r24, r22
     464:	9a 87       	std	Y+10, r25	; 0x0a
     466:	89 87       	std	Y+9, r24	; 0x09
     468:	0f c0       	rjmp	.+30     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
     46a:	80 e9       	ldi	r24, 0x90	; 144
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	9c 87       	std	Y+12, r25	; 0x0c
     470:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     472:	8b 85       	ldd	r24, Y+11	; 0x0b
     474:	9c 85       	ldd	r25, Y+12	; 0x0c
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     47a:	9c 87       	std	Y+12, r25	; 0x0c
     47c:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     47e:	89 85       	ldd	r24, Y+9	; 0x09
     480:	9a 85       	ldd	r25, Y+10	; 0x0a
     482:	01 97       	sbiw	r24, 0x01	; 1
     484:	9a 87       	std	Y+10, r25	; 0x0a
     486:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     488:	89 85       	ldd	r24, Y+9	; 0x09
     48a:	9a 85       	ldd	r25, Y+10	; 0x0a
     48c:	89 2b       	or	r24, r25
     48e:	69 f7       	brne	.-38     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
     490:	14 c0       	rjmp	.+40     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     49e:	dc 01       	movw	r26, r24
     4a0:	cb 01       	movw	r24, r22
     4a2:	9a 87       	std	Y+10, r25	; 0x0a
     4a4:	89 87       	std	Y+9, r24	; 0x09
     4a6:	89 85       	ldd	r24, Y+9	; 0x09
     4a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     4aa:	9e 87       	std	Y+14, r25	; 0x0e
     4ac:	8d 87       	std	Y+13, r24	; 0x0d
     4ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     4b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	f1 f7       	brne	.-4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4b6:	9e 87       	std	Y+14, r25	; 0x0e
     4b8:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(1000);
		
		if (Celsius <= 80)
     4ba:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <Celsius>
     4be:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <Celsius+0x1>
     4c2:	a0 91 21 03 	lds	r26, 0x0321	; 0x800321 <Celsius+0x2>
     4c6:	b0 91 22 03 	lds	r27, 0x0322	; 0x800322 <Celsius+0x3>
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	40 ea       	ldi	r20, 0xA0	; 160
     4d0:	52 e4       	ldi	r21, 0x42	; 66
     4d2:	bc 01       	movw	r22, r24
     4d4:	cd 01       	movw	r24, r26
     4d6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__cmpsf2>
     4da:	18 16       	cp	r1, r24
     4dc:	2c f0       	brlt	.+10     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
		{
			PORTC = 0b00000000;
     4de:	88 e2       	ldi	r24, 0x28	; 40
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	fc 01       	movw	r30, r24
     4e4:	10 82       	st	Z, r1
     4e6:	21 cf       	rjmp	.-446    	; 0x32a <main+0x5c>
		}
		else
		{
			PORTC = 0b00100000;
     4e8:	88 e2       	ldi	r24, 0x28	; 40
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	20 e2       	ldi	r18, 0x20	; 32
     4ee:	fc 01       	movw	r30, r24
     4f0:	20 83       	st	Z, r18
		}
	}
     4f2:	1b cf       	rjmp	.-458    	; 0x32a <main+0x5c>

000004f4 <int_to_str>:
}

void int_to_str(uint16_t s, unsigned char *d)
{
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	00 d0       	rcall	.+0      	; 0x4fa <int_to_str+0x6>
     4fa:	00 d0       	rcall	.+0      	; 0x4fc <int_to_str+0x8>
     4fc:	00 d0       	rcall	.+0      	; 0x4fe <int_to_str+0xa>
     4fe:	cd b7       	in	r28, 0x3d	; 61
     500:	de b7       	in	r29, 0x3e	; 62
     502:	9c 83       	std	Y+4, r25	; 0x04
     504:	8b 83       	std	Y+3, r24	; 0x03
     506:	7e 83       	std	Y+6, r23	; 0x06
     508:	6d 83       	std	Y+5, r22	; 0x05
	uint8_t n = tam_vetor - 2;
     50a:	83 e0       	ldi	r24, 0x03	; 3
     50c:	8a 83       	std	Y+2, r24	; 0x02

	for (int8_t i = n; i >= 0; i--)
     50e:	8a 81       	ldd	r24, Y+2	; 0x02
     510:	89 83       	std	Y+1, r24	; 0x01
     512:	37 c0       	rjmp	.+110    	; 0x582 <int_to_str+0x8e>
	{
		d[i]=s%10+48;
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	08 2e       	mov	r0, r24
     518:	00 0c       	add	r0, r0
     51a:	99 0b       	sbc	r25, r25
     51c:	2d 81       	ldd	r18, Y+5	; 0x05
     51e:	3e 81       	ldd	r19, Y+6	; 0x06
     520:	f9 01       	movw	r30, r18
     522:	e8 0f       	add	r30, r24
     524:	f9 1f       	adc	r31, r25
     526:	4b 81       	ldd	r20, Y+3	; 0x03
     528:	5c 81       	ldd	r21, Y+4	; 0x04
     52a:	9a 01       	movw	r18, r20
     52c:	ad ec       	ldi	r26, 0xCD	; 205
     52e:	bc ec       	ldi	r27, 0xCC	; 204
     530:	0e 94 44 08 	call	0x1088	; 0x1088 <__umulhisi3>
     534:	96 95       	lsr	r25
     536:	87 95       	ror	r24
     538:	96 95       	lsr	r25
     53a:	87 95       	ror	r24
     53c:	96 95       	lsr	r25
     53e:	87 95       	ror	r24
     540:	88 0f       	add	r24, r24
     542:	99 1f       	adc	r25, r25
     544:	9c 01       	movw	r18, r24
     546:	22 0f       	add	r18, r18
     548:	33 1f       	adc	r19, r19
     54a:	22 0f       	add	r18, r18
     54c:	33 1f       	adc	r19, r19
     54e:	82 0f       	add	r24, r18
     550:	93 1f       	adc	r25, r19
     552:	9a 01       	movw	r18, r20
     554:	28 1b       	sub	r18, r24
     556:	39 0b       	sbc	r19, r25
     558:	c9 01       	movw	r24, r18
     55a:	80 5d       	subi	r24, 0xD0	; 208
     55c:	80 83       	st	Z, r24
		s/=10;
     55e:	8b 81       	ldd	r24, Y+3	; 0x03
     560:	9c 81       	ldd	r25, Y+4	; 0x04
     562:	9c 01       	movw	r18, r24
     564:	ad ec       	ldi	r26, 0xCD	; 205
     566:	bc ec       	ldi	r27, 0xCC	; 204
     568:	0e 94 44 08 	call	0x1088	; 0x1088 <__umulhisi3>
     56c:	96 95       	lsr	r25
     56e:	87 95       	ror	r24
     570:	96 95       	lsr	r25
     572:	87 95       	ror	r24
     574:	96 95       	lsr	r25
     576:	87 95       	ror	r24
     578:	9c 83       	std	Y+4, r25	; 0x04
     57a:	8b 83       	std	Y+3, r24	; 0x03

void int_to_str(uint16_t s, unsigned char *d)
{
	uint8_t n = tam_vetor - 2;

	for (int8_t i = n; i >= 0; i--)
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	81 50       	subi	r24, 0x01	; 1
     580:	89 83       	std	Y+1, r24	; 0x01
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	88 23       	and	r24, r24
     586:	34 f6       	brge	.-116    	; 0x514 <int_to_str+0x20>
	{
		d[i]=s%10+48;
		s/=10;
	}
     588:	00 00       	nop
     58a:	26 96       	adiw	r28, 0x06	; 6
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	08 95       	ret

0000059c <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
     59c:	1f 93       	push	r17
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	00 d0       	rcall	.+0      	; 0x5a4 <write+0x8>
     5a4:	cd b7       	in	r28, 0x3d	; 61
     5a6:	de b7       	in	r29, 0x3e	; 62
     5a8:	89 83       	std	Y+1, r24	; 0x01
     5aa:	6a 83       	std	Y+2, r22	; 0x02
     5ac:	85 e2       	ldi	r24, 0x25	; 37
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	25 e2       	ldi	r18, 0x25	; 37
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	f9 01       	movw	r30, r18
     5b6:	20 81       	ld	r18, Z
     5b8:	2d 7f       	andi	r18, 0xFD	; 253
     5ba:	fc 01       	movw	r30, r24
     5bc:	20 83       	st	Z, r18
     5be:	8a 81       	ldd	r24, Y+2	; 0x02
     5c0:	88 23       	and	r24, r24
     5c2:	51 f0       	breq	.+20     	; 0x5d8 <write+0x3c>
     5c4:	85 e2       	ldi	r24, 0x25	; 37
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	25 e2       	ldi	r18, 0x25	; 37
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	f9 01       	movw	r30, r18
     5ce:	20 81       	ld	r18, Z
     5d0:	28 60       	ori	r18, 0x08	; 8
     5d2:	fc 01       	movw	r30, r24
     5d4:	20 83       	st	Z, r18
     5d6:	09 c0       	rjmp	.+18     	; 0x5ea <write+0x4e>
     5d8:	85 e2       	ldi	r24, 0x25	; 37
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	25 e2       	ldi	r18, 0x25	; 37
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	f9 01       	movw	r30, r18
     5e2:	20 81       	ld	r18, Z
     5e4:	27 7f       	andi	r18, 0xF7	; 247
     5e6:	fc 01       	movw	r30, r24
     5e8:	20 83       	st	Z, r18
     5ea:	10 e0       	ldi	r17, 0x00	; 0
     5ec:	3c c0       	rjmp	.+120    	; 0x666 <write+0xca>
     5ee:	89 81       	ldd	r24, Y+1	; 0x01
     5f0:	88 2f       	mov	r24, r24
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	21 2f       	mov	r18, r17
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	47 e0       	ldi	r20, 0x07	; 7
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	ba 01       	movw	r22, r20
     5fe:	62 1b       	sub	r22, r18
     600:	73 0b       	sbc	r23, r19
     602:	9b 01       	movw	r18, r22
     604:	02 c0       	rjmp	.+4      	; 0x60a <write+0x6e>
     606:	95 95       	asr	r25
     608:	87 95       	ror	r24
     60a:	2a 95       	dec	r18
     60c:	e2 f7       	brpl	.-8      	; 0x606 <write+0x6a>
     60e:	81 70       	andi	r24, 0x01	; 1
     610:	99 27       	eor	r25, r25
     612:	89 2b       	or	r24, r25
     614:	51 f0       	breq	.+20     	; 0x62a <write+0x8e>
     616:	85 e2       	ldi	r24, 0x25	; 37
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	25 e2       	ldi	r18, 0x25	; 37
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	f9 01       	movw	r30, r18
     620:	20 81       	ld	r18, Z
     622:	20 61       	ori	r18, 0x10	; 16
     624:	fc 01       	movw	r30, r24
     626:	20 83       	st	Z, r18
     628:	09 c0       	rjmp	.+18     	; 0x63c <write+0xa0>
     62a:	85 e2       	ldi	r24, 0x25	; 37
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	25 e2       	ldi	r18, 0x25	; 37
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	f9 01       	movw	r30, r18
     634:	20 81       	ld	r18, Z
     636:	2f 7e       	andi	r18, 0xEF	; 239
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
     63c:	85 e2       	ldi	r24, 0x25	; 37
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	25 e2       	ldi	r18, 0x25	; 37
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	f9 01       	movw	r30, r18
     646:	20 81       	ld	r18, Z
     648:	20 62       	ori	r18, 0x20	; 32
     64a:	fc 01       	movw	r30, r24
     64c:	20 83       	st	Z, r18
     64e:	85 e2       	ldi	r24, 0x25	; 37
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	25 e2       	ldi	r18, 0x25	; 37
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	f9 01       	movw	r30, r18
     658:	20 81       	ld	r18, Z
     65a:	2f 7d       	andi	r18, 0xDF	; 223
     65c:	fc 01       	movw	r30, r24
     65e:	20 83       	st	Z, r18
     660:	81 2f       	mov	r24, r17
     662:	11 e0       	ldi	r17, 0x01	; 1
     664:	18 0f       	add	r17, r24
     666:	18 30       	cpi	r17, 0x08	; 8
     668:	10 f2       	brcs	.-124    	; 0x5ee <write+0x52>
     66a:	85 e2       	ldi	r24, 0x25	; 37
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	25 e2       	ldi	r18, 0x25	; 37
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	f9 01       	movw	r30, r18
     674:	20 81       	ld	r18, Z
     676:	22 60       	ori	r18, 0x02	; 2
     678:	fc 01       	movw	r30, r24
     67a:	20 83       	st	Z, r18
     67c:	00 00       	nop
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	1f 91       	pop	r17
     688:	08 95       	ret

0000068a <write_cmd>:
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	1f 92       	push	r1
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	89 83       	std	Y+1, r24	; 0x01
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	89 81       	ldd	r24, Y+1	; 0x01
     69a:	0e 94 ce 02 	call	0x59c	; 0x59c <write>
     69e:	00 00       	nop
     6a0:	0f 90       	pop	r0
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	08 95       	ret

000006a8 <write_data>:
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	1f 92       	push	r1
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
     6b2:	89 83       	std	Y+1, r24	; 0x01
     6b4:	61 e0       	ldi	r22, 0x01	; 1
     6b6:	89 81       	ldd	r24, Y+1	; 0x01
     6b8:	0e 94 ce 02 	call	0x59c	; 0x59c <write>
     6bc:	00 00       	nop
     6be:	0f 90       	pop	r0
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	08 95       	ret

000006c6 <nokia_lcd_init>:
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	6c 97       	sbiw	r28, 0x1c	; 28
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	f8 94       	cli
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	cd bf       	out	0x3d, r28	; 61
     6de:	84 e2       	ldi	r24, 0x24	; 36
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	24 e2       	ldi	r18, 0x24	; 36
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	f9 01       	movw	r30, r18
     6e8:	20 81       	ld	r18, Z
     6ea:	22 60       	ori	r18, 0x02	; 2
     6ec:	fc 01       	movw	r30, r24
     6ee:	20 83       	st	Z, r18
     6f0:	84 e2       	ldi	r24, 0x24	; 36
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	24 e2       	ldi	r18, 0x24	; 36
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	f9 01       	movw	r30, r18
     6fa:	20 81       	ld	r18, Z
     6fc:	24 60       	ori	r18, 0x04	; 4
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18
     702:	84 e2       	ldi	r24, 0x24	; 36
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	24 e2       	ldi	r18, 0x24	; 36
     708:	30 e0       	ldi	r19, 0x00	; 0
     70a:	f9 01       	movw	r30, r18
     70c:	20 81       	ld	r18, Z
     70e:	28 60       	ori	r18, 0x08	; 8
     710:	fc 01       	movw	r30, r24
     712:	20 83       	st	Z, r18
     714:	84 e2       	ldi	r24, 0x24	; 36
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	24 e2       	ldi	r18, 0x24	; 36
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	f9 01       	movw	r30, r18
     71e:	20 81       	ld	r18, Z
     720:	20 61       	ori	r18, 0x10	; 16
     722:	fc 01       	movw	r30, r24
     724:	20 83       	st	Z, r18
     726:	84 e2       	ldi	r24, 0x24	; 36
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	24 e2       	ldi	r18, 0x24	; 36
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	f9 01       	movw	r30, r18
     730:	20 81       	ld	r18, Z
     732:	20 62       	ori	r18, 0x20	; 32
     734:	fc 01       	movw	r30, r24
     736:	20 83       	st	Z, r18
     738:	85 e2       	ldi	r24, 0x25	; 37
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	25 e2       	ldi	r18, 0x25	; 37
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	f9 01       	movw	r30, r18
     742:	20 81       	ld	r18, Z
     744:	24 60       	ori	r18, 0x04	; 4
     746:	fc 01       	movw	r30, r24
     748:	20 83       	st	Z, r18
     74a:	85 e2       	ldi	r24, 0x25	; 37
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	25 e2       	ldi	r18, 0x25	; 37
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	f9 01       	movw	r30, r18
     754:	20 81       	ld	r18, Z
     756:	22 60       	ori	r18, 0x02	; 2
     758:	fc 01       	movw	r30, r24
     75a:	20 83       	st	Z, r18
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	a0 e2       	ldi	r26, 0x20	; 32
     762:	b1 e4       	ldi	r27, 0x41	; 65
     764:	89 83       	std	Y+1, r24	; 0x01
     766:	9a 83       	std	Y+2, r25	; 0x02
     768:	ab 83       	std	Y+3, r26	; 0x03
     76a:	bc 83       	std	Y+4, r27	; 0x04
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	4a e7       	ldi	r20, 0x7A	; 122
     772:	53 e4       	ldi	r21, 0x43	; 67
     774:	69 81       	ldd	r22, Y+1	; 0x01
     776:	7a 81       	ldd	r23, Y+2	; 0x02
     778:	8b 81       	ldd	r24, Y+3	; 0x03
     77a:	9c 81       	ldd	r25, Y+4	; 0x04
     77c:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     780:	dc 01       	movw	r26, r24
     782:	cb 01       	movw	r24, r22
     784:	8b 8b       	std	Y+19, r24	; 0x13
     786:	9c 8b       	std	Y+20, r25	; 0x14
     788:	ad 8b       	std	Y+21, r26	; 0x15
     78a:	be 8b       	std	Y+22, r27	; 0x16
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e8       	ldi	r20, 0x80	; 128
     792:	5f e3       	ldi	r21, 0x3F	; 63
     794:	6b 89       	ldd	r22, Y+19	; 0x13
     796:	7c 89       	ldd	r23, Y+20	; 0x14
     798:	8d 89       	ldd	r24, Y+21	; 0x15
     79a:	9e 89       	ldd	r25, Y+22	; 0x16
     79c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__cmpsf2>
     7a0:	88 23       	and	r24, r24
     7a2:	2c f4       	brge	.+10     	; 0x7ae <nokia_lcd_init+0xe8>
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	98 8f       	std	Y+24, r25	; 0x18
     7aa:	8f 8b       	std	Y+23, r24	; 0x17
     7ac:	3f c0       	rjmp	.+126    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	3f ef       	ldi	r19, 0xFF	; 255
     7b2:	4f e7       	ldi	r20, 0x7F	; 127
     7b4:	57 e4       	ldi	r21, 0x47	; 71
     7b6:	6b 89       	ldd	r22, Y+19	; 0x13
     7b8:	7c 89       	ldd	r23, Y+20	; 0x14
     7ba:	8d 89       	ldd	r24, Y+21	; 0x15
     7bc:	9e 89       	ldd	r25, Y+22	; 0x16
     7be:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__gesf2>
     7c2:	18 16       	cp	r1, r24
     7c4:	4c f5       	brge	.+82     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	40 e2       	ldi	r20, 0x20	; 32
     7cc:	51 e4       	ldi	r21, 0x41	; 65
     7ce:	69 81       	ldd	r22, Y+1	; 0x01
     7d0:	7a 81       	ldd	r23, Y+2	; 0x02
     7d2:	8b 81       	ldd	r24, Y+3	; 0x03
     7d4:	9c 81       	ldd	r25, Y+4	; 0x04
     7d6:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	bc 01       	movw	r22, r24
     7e0:	cd 01       	movw	r24, r26
     7e2:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     7e6:	dc 01       	movw	r26, r24
     7e8:	cb 01       	movw	r24, r22
     7ea:	98 8f       	std	Y+24, r25	; 0x18
     7ec:	8f 8b       	std	Y+23, r24	; 0x17
     7ee:	0f c0       	rjmp	.+30     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     7f0:	89 e1       	ldi	r24, 0x19	; 25
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9a 8f       	std	Y+26, r25	; 0x1a
     7f6:	89 8f       	std	Y+25, r24	; 0x19
     7f8:	89 8d       	ldd	r24, Y+25	; 0x19
     7fa:	9a 8d       	ldd	r25, Y+26	; 0x1a
     7fc:	01 97       	sbiw	r24, 0x01	; 1
     7fe:	f1 f7       	brne	.-4      	; 0x7fc <nokia_lcd_init+0x136>
     800:	9a 8f       	std	Y+26, r25	; 0x1a
     802:	89 8f       	std	Y+25, r24	; 0x19
     804:	8f 89       	ldd	r24, Y+23	; 0x17
     806:	98 8d       	ldd	r25, Y+24	; 0x18
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	98 8f       	std	Y+24, r25	; 0x18
     80c:	8f 8b       	std	Y+23, r24	; 0x17
     80e:	8f 89       	ldd	r24, Y+23	; 0x17
     810:	98 8d       	ldd	r25, Y+24	; 0x18
     812:	89 2b       	or	r24, r25
     814:	69 f7       	brne	.-38     	; 0x7f0 <nokia_lcd_init+0x12a>
     816:	14 c0       	rjmp	.+40     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     818:	6b 89       	ldd	r22, Y+19	; 0x13
     81a:	7c 89       	ldd	r23, Y+20	; 0x14
     81c:	8d 89       	ldd	r24, Y+21	; 0x15
     81e:	9e 89       	ldd	r25, Y+22	; 0x16
     820:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     824:	dc 01       	movw	r26, r24
     826:	cb 01       	movw	r24, r22
     828:	98 8f       	std	Y+24, r25	; 0x18
     82a:	8f 8b       	std	Y+23, r24	; 0x17
     82c:	8f 89       	ldd	r24, Y+23	; 0x17
     82e:	98 8d       	ldd	r25, Y+24	; 0x18
     830:	9c 8f       	std	Y+28, r25	; 0x1c
     832:	8b 8f       	std	Y+27, r24	; 0x1b
     834:	8b 8d       	ldd	r24, Y+27	; 0x1b
     836:	9c 8d       	ldd	r25, Y+28	; 0x1c
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	f1 f7       	brne	.-4      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
     83c:	9c 8f       	std	Y+28, r25	; 0x1c
     83e:	8b 8f       	std	Y+27, r24	; 0x1b
     840:	85 e2       	ldi	r24, 0x25	; 37
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	25 e2       	ldi	r18, 0x25	; 37
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	f9 01       	movw	r30, r18
     84a:	20 81       	ld	r18, Z
     84c:	2b 7f       	andi	r18, 0xFB	; 251
     84e:	fc 01       	movw	r30, r24
     850:	20 83       	st	Z, r18
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	ac e8       	ldi	r26, 0x8C	; 140
     858:	b2 e4       	ldi	r27, 0x42	; 66
     85a:	8d 83       	std	Y+5, r24	; 0x05
     85c:	9e 83       	std	Y+6, r25	; 0x06
     85e:	af 83       	std	Y+7, r26	; 0x07
     860:	b8 87       	std	Y+8, r27	; 0x08
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	4a e7       	ldi	r20, 0x7A	; 122
     868:	53 e4       	ldi	r21, 0x43	; 67
     86a:	6d 81       	ldd	r22, Y+5	; 0x05
     86c:	7e 81       	ldd	r23, Y+6	; 0x06
     86e:	8f 81       	ldd	r24, Y+7	; 0x07
     870:	98 85       	ldd	r25, Y+8	; 0x08
     872:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     876:	dc 01       	movw	r26, r24
     878:	cb 01       	movw	r24, r22
     87a:	89 87       	std	Y+9, r24	; 0x09
     87c:	9a 87       	std	Y+10, r25	; 0x0a
     87e:	ab 87       	std	Y+11, r26	; 0x0b
     880:	bc 87       	std	Y+12, r27	; 0x0c
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	40 e8       	ldi	r20, 0x80	; 128
     888:	5f e3       	ldi	r21, 0x3F	; 63
     88a:	69 85       	ldd	r22, Y+9	; 0x09
     88c:	7a 85       	ldd	r23, Y+10	; 0x0a
     88e:	8b 85       	ldd	r24, Y+11	; 0x0b
     890:	9c 85       	ldd	r25, Y+12	; 0x0c
     892:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__cmpsf2>
     896:	88 23       	and	r24, r24
     898:	2c f4       	brge	.+10     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	9e 87       	std	Y+14, r25	; 0x0e
     8a0:	8d 87       	std	Y+13, r24	; 0x0d
     8a2:	3f c0       	rjmp	.+126    	; 0x922 <__stack+0x23>
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	3f ef       	ldi	r19, 0xFF	; 255
     8a8:	4f e7       	ldi	r20, 0x7F	; 127
     8aa:	57 e4       	ldi	r21, 0x47	; 71
     8ac:	69 85       	ldd	r22, Y+9	; 0x09
     8ae:	7a 85       	ldd	r23, Y+10	; 0x0a
     8b0:	8b 85       	ldd	r24, Y+11	; 0x0b
     8b2:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b4:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__gesf2>
     8b8:	18 16       	cp	r1, r24
     8ba:	4c f5       	brge	.+82     	; 0x90e <__stack+0xf>
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	40 e2       	ldi	r20, 0x20	; 32
     8c2:	51 e4       	ldi	r21, 0x41	; 65
     8c4:	6d 81       	ldd	r22, Y+5	; 0x05
     8c6:	7e 81       	ldd	r23, Y+6	; 0x06
     8c8:	8f 81       	ldd	r24, Y+7	; 0x07
     8ca:	98 85       	ldd	r25, Y+8	; 0x08
     8cc:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulsf3>
     8d0:	dc 01       	movw	r26, r24
     8d2:	cb 01       	movw	r24, r22
     8d4:	bc 01       	movw	r22, r24
     8d6:	cd 01       	movw	r24, r26
     8d8:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     8dc:	dc 01       	movw	r26, r24
     8de:	cb 01       	movw	r24, r22
     8e0:	9e 87       	std	Y+14, r25	; 0x0e
     8e2:	8d 87       	std	Y+13, r24	; 0x0d
     8e4:	0f c0       	rjmp	.+30     	; 0x904 <__stack+0x5>
     8e6:	89 e1       	ldi	r24, 0x19	; 25
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	98 8b       	std	Y+16, r25	; 0x10
     8ec:	8f 87       	std	Y+15, r24	; 0x0f
     8ee:	8f 85       	ldd	r24, Y+15	; 0x0f
     8f0:	98 89       	ldd	r25, Y+16	; 0x10
     8f2:	01 97       	sbiw	r24, 0x01	; 1
     8f4:	f1 f7       	brne	.-4      	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
     8f6:	98 8b       	std	Y+16, r25	; 0x10
     8f8:	8f 87       	std	Y+15, r24	; 0x0f
     8fa:	8d 85       	ldd	r24, Y+13	; 0x0d
     8fc:	9e 85       	ldd	r25, Y+14	; 0x0e
     8fe:	01 97       	sbiw	r24, 0x01	; 1
     900:	9e 87       	std	Y+14, r25	; 0x0e
     902:	8d 87       	std	Y+13, r24	; 0x0d
     904:	8d 85       	ldd	r24, Y+13	; 0x0d
     906:	9e 85       	ldd	r25, Y+14	; 0x0e
     908:	89 2b       	or	r24, r25
     90a:	69 f7       	brne	.-38     	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     90c:	14 c0       	rjmp	.+40     	; 0x936 <__stack+0x37>
     90e:	69 85       	ldd	r22, Y+9	; 0x09
     910:	7a 85       	ldd	r23, Y+10	; 0x0a
     912:	8b 85       	ldd	r24, Y+11	; 0x0b
     914:	9c 85       	ldd	r25, Y+12	; 0x0c
     916:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixunssfsi>
     91a:	dc 01       	movw	r26, r24
     91c:	cb 01       	movw	r24, r22
     91e:	9e 87       	std	Y+14, r25	; 0x0e
     920:	8d 87       	std	Y+13, r24	; 0x0d
     922:	8d 85       	ldd	r24, Y+13	; 0x0d
     924:	9e 85       	ldd	r25, Y+14	; 0x0e
     926:	9a 8b       	std	Y+18, r25	; 0x12
     928:	89 8b       	std	Y+17, r24	; 0x11
     92a:	89 89       	ldd	r24, Y+17	; 0x11
     92c:	9a 89       	ldd	r25, Y+18	; 0x12
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	f1 f7       	brne	.-4      	; 0x92e <__stack+0x2f>
     932:	9a 8b       	std	Y+18, r25	; 0x12
     934:	89 8b       	std	Y+17, r24	; 0x11
     936:	85 e2       	ldi	r24, 0x25	; 37
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	25 e2       	ldi	r18, 0x25	; 37
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	f9 01       	movw	r30, r18
     940:	20 81       	ld	r18, Z
     942:	24 60       	ori	r18, 0x04	; 4
     944:	fc 01       	movw	r30, r24
     946:	20 83       	st	Z, r18
     948:	85 e2       	ldi	r24, 0x25	; 37
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	25 e2       	ldi	r18, 0x25	; 37
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	f9 01       	movw	r30, r18
     952:	20 81       	ld	r18, Z
     954:	2d 7f       	andi	r18, 0xFD	; 253
     956:	fc 01       	movw	r30, r24
     958:	20 83       	st	Z, r18
     95a:	81 e2       	ldi	r24, 0x21	; 33
     95c:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     960:	83 e1       	ldi	r24, 0x13	; 19
     962:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     966:	86 e0       	ldi	r24, 0x06	; 6
     968:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     96c:	82 ec       	ldi	r24, 0xC2	; 194
     96e:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     972:	80 e2       	ldi	r24, 0x20	; 32
     974:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     978:	89 e0       	ldi	r24, 0x09	; 9
     97a:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     97e:	80 e8       	ldi	r24, 0x80	; 128
     980:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     984:	80 e4       	ldi	r24, 0x40	; 64
     986:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     98a:	00 e0       	ldi	r16, 0x00	; 0
     98c:	10 e0       	ldi	r17, 0x00	; 0
     98e:	05 c0       	rjmp	.+10     	; 0x99a <__stack+0x9b>
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	0e 94 54 03 	call	0x6a8	; 0x6a8 <write_data>
     996:	0f 5f       	subi	r16, 0xFF	; 255
     998:	1f 4f       	sbci	r17, 0xFF	; 255
     99a:	08 3f       	cpi	r16, 0xF8	; 248
     99c:	f1 e0       	ldi	r31, 0x01	; 1
     99e:	1f 07       	cpc	r17, r31
     9a0:	b8 f3       	brcs	.-18     	; 0x990 <__stack+0x91>
     9a2:	88 e0       	ldi	r24, 0x08	; 8
     9a4:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     9a8:	8c e0       	ldi	r24, 0x0C	; 12
     9aa:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     9ae:	00 00       	nop
     9b0:	6c 96       	adiw	r28, 0x1c	; 28
     9b2:	0f b6       	in	r0, 0x3f	; 63
     9b4:	f8 94       	cli
     9b6:	de bf       	out	0x3e, r29	; 62
     9b8:	0f be       	out	0x3f, r0	; 63
     9ba:	cd bf       	out	0x3d, r28	; 61
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	1f 91       	pop	r17
     9c2:	0f 91       	pop	r16
     9c4:	08 95       	ret

000009c6 <nokia_lcd_clear>:
     9c6:	0f 93       	push	r16
     9c8:	1f 93       	push	r17
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	cd b7       	in	r28, 0x3d	; 61
     9d0:	de b7       	in	r29, 0x3e	; 62
     9d2:	80 e8       	ldi	r24, 0x80	; 128
     9d4:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     9d8:	80 e4       	ldi	r24, 0x40	; 64
     9da:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
     9de:	10 92 0c 03 	sts	0x030C, r1	; 0x80030c <nokia_lcd+0x1f8>
     9e2:	10 92 0d 03 	sts	0x030D, r1	; 0x80030d <nokia_lcd+0x1f9>
     9e6:	00 e0       	ldi	r16, 0x00	; 0
     9e8:	10 e0       	ldi	r17, 0x00	; 0
     9ea:	07 c0       	rjmp	.+14     	; 0x9fa <nokia_lcd_clear+0x34>
     9ec:	c8 01       	movw	r24, r16
     9ee:	8c 5e       	subi	r24, 0xEC	; 236
     9f0:	9e 4f       	sbci	r25, 0xFE	; 254
     9f2:	fc 01       	movw	r30, r24
     9f4:	10 82       	st	Z, r1
     9f6:	0f 5f       	subi	r16, 0xFF	; 255
     9f8:	1f 4f       	sbci	r17, 0xFF	; 255
     9fa:	08 3f       	cpi	r16, 0xF8	; 248
     9fc:	f1 e0       	ldi	r31, 0x01	; 1
     9fe:	1f 07       	cpc	r17, r31
     a00:	a8 f3       	brcs	.-22     	; 0x9ec <nokia_lcd_clear+0x26>
     a02:	00 00       	nop
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	1f 91       	pop	r17
     a0a:	0f 91       	pop	r16
     a0c:	08 95       	ret

00000a0e <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
     a0e:	cf 93       	push	r28
     a10:	df 93       	push	r29
     a12:	00 d0       	rcall	.+0      	; 0xa14 <nokia_lcd_set_pixel+0x6>
     a14:	00 d0       	rcall	.+0      	; 0xa16 <nokia_lcd_set_pixel+0x8>
     a16:	1f 92       	push	r1
     a18:	cd b7       	in	r28, 0x3d	; 61
     a1a:	de b7       	in	r29, 0x3e	; 62
     a1c:	8b 83       	std	Y+3, r24	; 0x03
     a1e:	6c 83       	std	Y+4, r22	; 0x04
     a20:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     a22:	8c 81       	ldd	r24, Y+4	; 0x04
     a24:	86 95       	lsr	r24
     a26:	86 95       	lsr	r24
     a28:	86 95       	lsr	r24
     a2a:	88 2f       	mov	r24, r24
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	44 e5       	ldi	r20, 0x54	; 84
     a30:	48 9f       	mul	r20, r24
     a32:	90 01       	movw	r18, r0
     a34:	49 9f       	mul	r20, r25
     a36:	30 0d       	add	r19, r0
     a38:	11 24       	eor	r1, r1
     a3a:	8b 81       	ldd	r24, Y+3	; 0x03
     a3c:	88 2f       	mov	r24, r24
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	82 0f       	add	r24, r18
     a42:	93 1f       	adc	r25, r19
     a44:	8c 5e       	subi	r24, 0xEC	; 236
     a46:	9e 4f       	sbci	r25, 0xFE	; 254
     a48:	9a 83       	std	Y+2, r25	; 0x02
     a4a:	89 83       	std	Y+1, r24	; 0x01
	if (value)
     a4c:	8d 81       	ldd	r24, Y+5	; 0x05
     a4e:	88 23       	and	r24, r24
     a50:	c9 f0       	breq	.+50     	; 0xa84 <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
     a52:	89 81       	ldd	r24, Y+1	; 0x01
     a54:	9a 81       	ldd	r25, Y+2	; 0x02
     a56:	fc 01       	movw	r30, r24
     a58:	80 81       	ld	r24, Z
     a5a:	48 2f       	mov	r20, r24
     a5c:	8c 81       	ldd	r24, Y+4	; 0x04
     a5e:	88 2f       	mov	r24, r24
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	9c 01       	movw	r18, r24
     a64:	27 70       	andi	r18, 0x07	; 7
     a66:	33 27       	eor	r19, r19
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	02 c0       	rjmp	.+4      	; 0xa72 <nokia_lcd_set_pixel+0x64>
     a6e:	88 0f       	add	r24, r24
     a70:	99 1f       	adc	r25, r25
     a72:	2a 95       	dec	r18
     a74:	e2 f7       	brpl	.-8      	; 0xa6e <nokia_lcd_set_pixel+0x60>
     a76:	84 2b       	or	r24, r20
     a78:	28 2f       	mov	r18, r24
     a7a:	89 81       	ldd	r24, Y+1	; 0x01
     a7c:	9a 81       	ldd	r25, Y+2	; 0x02
     a7e:	fc 01       	movw	r30, r24
     a80:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
     a82:	19 c0       	rjmp	.+50     	; 0xab6 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
     a84:	89 81       	ldd	r24, Y+1	; 0x01
     a86:	9a 81       	ldd	r25, Y+2	; 0x02
     a88:	fc 01       	movw	r30, r24
     a8a:	80 81       	ld	r24, Z
     a8c:	48 2f       	mov	r20, r24
     a8e:	8c 81       	ldd	r24, Y+4	; 0x04
     a90:	88 2f       	mov	r24, r24
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	9c 01       	movw	r18, r24
     a96:	27 70       	andi	r18, 0x07	; 7
     a98:	33 27       	eor	r19, r19
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	02 c0       	rjmp	.+4      	; 0xaa4 <nokia_lcd_set_pixel+0x96>
     aa0:	88 0f       	add	r24, r24
     aa2:	99 1f       	adc	r25, r25
     aa4:	2a 95       	dec	r18
     aa6:	e2 f7       	brpl	.-8      	; 0xaa0 <nokia_lcd_set_pixel+0x92>
     aa8:	80 95       	com	r24
     aaa:	84 23       	and	r24, r20
     aac:	28 2f       	mov	r18, r24
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	9a 81       	ldd	r25, Y+2	; 0x02
     ab2:	fc 01       	movw	r30, r24
     ab4:	20 83       	st	Z, r18
}
     ab6:	00 00       	nop
     ab8:	0f 90       	pop	r0
     aba:	0f 90       	pop	r0
     abc:	0f 90       	pop	r0
     abe:	0f 90       	pop	r0
     ac0:	0f 90       	pop	r0
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	08 95       	ret

00000ac8 <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
     ac8:	0f 93       	push	r16
     aca:	1f 93       	push	r17
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	00 d0       	rcall	.+0      	; 0xad2 <nokia_lcd_write_char+0xa>
     ad2:	00 d0       	rcall	.+0      	; 0xad4 <nokia_lcd_write_char+0xc>
     ad4:	1f 92       	push	r1
     ad6:	cd b7       	in	r28, 0x3d	; 61
     ad8:	de b7       	in	r29, 0x3e	; 62
     ada:	8c 83       	std	Y+4, r24	; 0x04
     adc:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     ade:	10 e0       	ldi	r17, 0x00	; 0
     ae0:	65 c0       	rjmp	.+202    	; 0xbac <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
     ae2:	00 e0       	ldi	r16, 0x00	; 0
     ae4:	4e c0       	rjmp	.+156    	; 0xb82 <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     ae6:	8c 81       	ldd	r24, Y+4	; 0x04
     ae8:	88 2f       	mov	r24, r24
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	9c 01       	movw	r18, r24
     aee:	20 52       	subi	r18, 0x20	; 32
     af0:	31 09       	sbc	r19, r1
     af2:	9d 81       	ldd	r25, Y+5	; 0x05
     af4:	81 2f       	mov	r24, r17
     af6:	69 2f       	mov	r22, r25
     af8:	0e 94 38 08 	call	0x1070	; 0x1070 <__udivmodqi4>
     afc:	48 2f       	mov	r20, r24
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	c9 01       	movw	r24, r18
     b02:	88 0f       	add	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	82 0f       	add	r24, r18
     b0c:	93 1f       	adc	r25, r19
     b0e:	84 0f       	add	r24, r20
     b10:	95 1f       	adc	r25, r21
     b12:	88 59       	subi	r24, 0x98	; 152
     b14:	9f 4f       	sbci	r25, 0xFF	; 255
     b16:	9a 83       	std	Y+2, r25	; 0x02
     b18:	89 83       	std	Y+1, r24	; 0x01
     b1a:	89 81       	ldd	r24, Y+1	; 0x01
     b1c:	9a 81       	ldd	r25, Y+2	; 0x02
     b1e:	fc 01       	movw	r30, r24
     b20:	84 91       	lpm	r24, Z
     b22:	8b 83       	std	Y+3, r24	; 0x03
     b24:	8b 81       	ldd	r24, Y+3	; 0x03
     b26:	28 2f       	mov	r18, r24
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	9d 81       	ldd	r25, Y+5	; 0x05
     b2c:	80 2f       	mov	r24, r16
     b2e:	69 2f       	mov	r22, r25
     b30:	0e 94 38 08 	call	0x1070	; 0x1070 <__udivmodqi4>
     b34:	88 2f       	mov	r24, r24
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	a9 01       	movw	r20, r18
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <nokia_lcd_write_char+0x78>
     b3c:	55 95       	asr	r21
     b3e:	47 95       	ror	r20
     b40:	8a 95       	dec	r24
     b42:	e2 f7       	brpl	.-8      	; 0xb3c <nokia_lcd_write_char+0x74>
     b44:	ca 01       	movw	r24, r20
     b46:	81 70       	andi	r24, 0x01	; 1
     b48:	99 27       	eor	r25, r25
     b4a:	89 2b       	or	r24, r25
     b4c:	61 f0       	breq	.+24     	; 0xb66 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     b4e:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <nokia_lcd+0x1f9>
     b52:	98 2f       	mov	r25, r24
     b54:	90 0f       	add	r25, r16
     b56:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <nokia_lcd+0x1f8>
     b5a:	81 0f       	add	r24, r17
     b5c:	41 e0       	ldi	r20, 0x01	; 1
     b5e:	69 2f       	mov	r22, r25
     b60:	0e 94 07 05 	call	0xa0e	; 0xa0e <nokia_lcd_set_pixel>
     b64:	0b c0       	rjmp	.+22     	; 0xb7c <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     b66:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <nokia_lcd+0x1f9>
     b6a:	98 2f       	mov	r25, r24
     b6c:	90 0f       	add	r25, r16
     b6e:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <nokia_lcd+0x1f8>
     b72:	81 0f       	add	r24, r17
     b74:	40 e0       	ldi	r20, 0x00	; 0
     b76:	69 2f       	mov	r22, r25
     b78:	0e 94 07 05 	call	0xa0e	; 0xa0e <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
     b7c:	80 2f       	mov	r24, r16
     b7e:	01 e0       	ldi	r16, 0x01	; 1
     b80:	08 0f       	add	r16, r24
     b82:	40 2f       	mov	r20, r16
     b84:	50 e0       	ldi	r21, 0x00	; 0
     b86:	8d 81       	ldd	r24, Y+5	; 0x05
     b88:	28 2f       	mov	r18, r24
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	c9 01       	movw	r24, r18
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	88 0f       	add	r24, r24
     b94:	99 1f       	adc	r25, r25
     b96:	88 0f       	add	r24, r24
     b98:	99 1f       	adc	r25, r25
     b9a:	82 1b       	sub	r24, r18
     b9c:	93 0b       	sbc	r25, r19
     b9e:	48 17       	cp	r20, r24
     ba0:	59 07       	cpc	r21, r25
     ba2:	0c f4       	brge	.+2      	; 0xba6 <nokia_lcd_write_char+0xde>
     ba4:	a0 cf       	rjmp	.-192    	; 0xae6 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     ba6:	81 2f       	mov	r24, r17
     ba8:	11 e0       	ldi	r17, 0x01	; 1
     baa:	18 0f       	add	r17, r24
     bac:	41 2f       	mov	r20, r17
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	8d 81       	ldd	r24, Y+5	; 0x05
     bb2:	28 2f       	mov	r18, r24
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	c9 01       	movw	r24, r18
     bb8:	88 0f       	add	r24, r24
     bba:	99 1f       	adc	r25, r25
     bbc:	88 0f       	add	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	82 0f       	add	r24, r18
     bc2:	93 1f       	adc	r25, r19
     bc4:	48 17       	cp	r20, r24
     bc6:	59 07       	cpc	r21, r25
     bc8:	0c f4       	brge	.+2      	; 0xbcc <nokia_lcd_write_char+0x104>
     bca:	8b cf       	rjmp	.-234    	; 0xae2 <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     bcc:	20 91 0c 03 	lds	r18, 0x030C	; 0x80030c <nokia_lcd+0x1f8>
     bd0:	9d 81       	ldd	r25, Y+5	; 0x05
     bd2:	89 2f       	mov	r24, r25
     bd4:	88 0f       	add	r24, r24
     bd6:	88 0f       	add	r24, r24
     bd8:	89 0f       	add	r24, r25
     bda:	82 0f       	add	r24, r18
     bdc:	8f 5f       	subi	r24, 0xFF	; 255
     bde:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
     be2:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <nokia_lcd+0x1f8>
     be6:	84 35       	cpi	r24, 0x54	; 84
     be8:	70 f0       	brcs	.+28     	; 0xc06 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
     bea:	10 92 0c 03 	sts	0x030C, r1	; 0x80030c <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
     bee:	20 91 0d 03 	lds	r18, 0x030D	; 0x80030d <nokia_lcd+0x1f9>
     bf2:	9d 81       	ldd	r25, Y+5	; 0x05
     bf4:	89 2f       	mov	r24, r25
     bf6:	88 0f       	add	r24, r24
     bf8:	88 0f       	add	r24, r24
     bfa:	88 0f       	add	r24, r24
     bfc:	89 1b       	sub	r24, r25
     bfe:	82 0f       	add	r24, r18
     c00:	8f 5f       	subi	r24, 0xFF	; 255
     c02:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
     c06:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <nokia_lcd+0x1f9>
     c0a:	80 33       	cpi	r24, 0x30	; 48
     c0c:	20 f0       	brcs	.+8      	; 0xc16 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
     c0e:	10 92 0c 03 	sts	0x030C, r1	; 0x80030c <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
     c12:	10 92 0d 03 	sts	0x030D, r1	; 0x80030d <nokia_lcd+0x1f9>
	}
}
     c16:	00 00       	nop
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	df 91       	pop	r29
     c24:	cf 91       	pop	r28
     c26:	1f 91       	pop	r17
     c28:	0f 91       	pop	r16
     c2a:	08 95       	ret

00000c2c <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	00 d0       	rcall	.+0      	; 0xc32 <nokia_lcd_write_string+0x6>
     c32:	1f 92       	push	r1
     c34:	cd b7       	in	r28, 0x3d	; 61
     c36:	de b7       	in	r29, 0x3e	; 62
     c38:	9a 83       	std	Y+2, r25	; 0x02
     c3a:	89 83       	std	Y+1, r24	; 0x01
     c3c:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
     c3e:	0c c0       	rjmp	.+24     	; 0xc58 <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
     c40:	89 81       	ldd	r24, Y+1	; 0x01
     c42:	9a 81       	ldd	r25, Y+2	; 0x02
     c44:	9c 01       	movw	r18, r24
     c46:	2f 5f       	subi	r18, 0xFF	; 255
     c48:	3f 4f       	sbci	r19, 0xFF	; 255
     c4a:	3a 83       	std	Y+2, r19	; 0x02
     c4c:	29 83       	std	Y+1, r18	; 0x01
     c4e:	fc 01       	movw	r30, r24
     c50:	80 81       	ld	r24, Z
     c52:	6b 81       	ldd	r22, Y+3	; 0x03
     c54:	0e 94 64 05 	call	0xac8	; 0xac8 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
     c58:	89 81       	ldd	r24, Y+1	; 0x01
     c5a:	9a 81       	ldd	r25, Y+2	; 0x02
     c5c:	fc 01       	movw	r30, r24
     c5e:	80 81       	ld	r24, Z
     c60:	88 23       	and	r24, r24
     c62:	71 f7       	brne	.-36     	; 0xc40 <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
     c64:	00 00       	nop
     c66:	0f 90       	pop	r0
     c68:	0f 90       	pop	r0
     c6a:	0f 90       	pop	r0
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	00 d0       	rcall	.+0      	; 0xc78 <nokia_lcd_set_cursor+0x6>
     c78:	cd b7       	in	r28, 0x3d	; 61
     c7a:	de b7       	in	r29, 0x3e	; 62
     c7c:	89 83       	std	Y+1, r24	; 0x01
     c7e:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
     c80:	89 81       	ldd	r24, Y+1	; 0x01
     c82:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
     c86:	8a 81       	ldd	r24, Y+2	; 0x02
     c88:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <nokia_lcd+0x1f9>
}
     c8c:	00 00       	nop
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <nokia_lcd_render>:

void nokia_lcd_render(void)
{
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	cd b7       	in	r28, 0x3d	; 61
     ca2:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     ca4:	80 e8       	ldi	r24, 0x80	; 128
     ca6:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>
	write_cmd(0x40);
     caa:	80 e4       	ldi	r24, 0x40	; 64
     cac:	0e 94 45 03 	call	0x68a	; 0x68a <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     cb0:	00 e0       	ldi	r16, 0x00	; 0
     cb2:	10 e0       	ldi	r17, 0x00	; 0
     cb4:	09 c0       	rjmp	.+18     	; 0xcc8 <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
     cb6:	c8 01       	movw	r24, r16
     cb8:	8c 5e       	subi	r24, 0xEC	; 236
     cba:	9e 4f       	sbci	r25, 0xFE	; 254
     cbc:	fc 01       	movw	r30, r24
     cbe:	80 81       	ld	r24, Z
     cc0:	0e 94 54 03 	call	0x6a8	; 0x6a8 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     cc4:	0f 5f       	subi	r16, 0xFF	; 255
     cc6:	1f 4f       	sbci	r17, 0xFF	; 255
     cc8:	08 3f       	cpi	r16, 0xF8	; 248
     cca:	f1 e0       	ldi	r31, 0x01	; 1
     ccc:	1f 07       	cpc	r17, r31
     cce:	98 f3       	brcs	.-26     	; 0xcb6 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
     cd0:	00 00       	nop
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	08 95       	ret

00000cdc <__cmpsf2>:
     cdc:	0e 94 51 07 	call	0xea2	; 0xea2 <__fp_cmp>
     ce0:	08 f4       	brcc	.+2      	; 0xce4 <__cmpsf2+0x8>
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	08 95       	ret

00000ce6 <__divsf3>:
     ce6:	0e 94 87 06 	call	0xd0e	; 0xd0e <__divsf3x>
     cea:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <__fp_round>
     cee:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fp_pscB>
     cf2:	58 f0       	brcs	.+22     	; 0xd0a <__divsf3+0x24>
     cf4:	0e 94 7e 07 	call	0xefc	; 0xefc <__fp_pscA>
     cf8:	40 f0       	brcs	.+16     	; 0xd0a <__divsf3+0x24>
     cfa:	29 f4       	brne	.+10     	; 0xd06 <__divsf3+0x20>
     cfc:	5f 3f       	cpi	r21, 0xFF	; 255
     cfe:	29 f0       	breq	.+10     	; 0xd0a <__divsf3+0x24>
     d00:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_inf>
     d04:	51 11       	cpse	r21, r1
     d06:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__fp_szero>
     d0a:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__fp_nan>

00000d0e <__divsf3x>:
     d0e:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__fp_split3>
     d12:	68 f3       	brcs	.-38     	; 0xcee <__divsf3+0x8>

00000d14 <__divsf3_pse>:
     d14:	99 23       	and	r25, r25
     d16:	b1 f3       	breq	.-20     	; 0xd04 <__divsf3+0x1e>
     d18:	55 23       	and	r21, r21
     d1a:	91 f3       	breq	.-28     	; 0xd00 <__divsf3+0x1a>
     d1c:	95 1b       	sub	r25, r21
     d1e:	55 0b       	sbc	r21, r21
     d20:	bb 27       	eor	r27, r27
     d22:	aa 27       	eor	r26, r26
     d24:	62 17       	cp	r22, r18
     d26:	73 07       	cpc	r23, r19
     d28:	84 07       	cpc	r24, r20
     d2a:	38 f0       	brcs	.+14     	; 0xd3a <__divsf3_pse+0x26>
     d2c:	9f 5f       	subi	r25, 0xFF	; 255
     d2e:	5f 4f       	sbci	r21, 0xFF	; 255
     d30:	22 0f       	add	r18, r18
     d32:	33 1f       	adc	r19, r19
     d34:	44 1f       	adc	r20, r20
     d36:	aa 1f       	adc	r26, r26
     d38:	a9 f3       	breq	.-22     	; 0xd24 <__divsf3_pse+0x10>
     d3a:	35 d0       	rcall	.+106    	; 0xda6 <__divsf3_pse+0x92>
     d3c:	0e 2e       	mov	r0, r30
     d3e:	3a f0       	brmi	.+14     	; 0xd4e <__divsf3_pse+0x3a>
     d40:	e0 e8       	ldi	r30, 0x80	; 128
     d42:	32 d0       	rcall	.+100    	; 0xda8 <__divsf3_pse+0x94>
     d44:	91 50       	subi	r25, 0x01	; 1
     d46:	50 40       	sbci	r21, 0x00	; 0
     d48:	e6 95       	lsr	r30
     d4a:	00 1c       	adc	r0, r0
     d4c:	ca f7       	brpl	.-14     	; 0xd40 <__divsf3_pse+0x2c>
     d4e:	2b d0       	rcall	.+86     	; 0xda6 <__divsf3_pse+0x92>
     d50:	fe 2f       	mov	r31, r30
     d52:	29 d0       	rcall	.+82     	; 0xda6 <__divsf3_pse+0x92>
     d54:	66 0f       	add	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	88 1f       	adc	r24, r24
     d5a:	bb 1f       	adc	r27, r27
     d5c:	26 17       	cp	r18, r22
     d5e:	37 07       	cpc	r19, r23
     d60:	48 07       	cpc	r20, r24
     d62:	ab 07       	cpc	r26, r27
     d64:	b0 e8       	ldi	r27, 0x80	; 128
     d66:	09 f0       	breq	.+2      	; 0xd6a <__divsf3_pse+0x56>
     d68:	bb 0b       	sbc	r27, r27
     d6a:	80 2d       	mov	r24, r0
     d6c:	bf 01       	movw	r22, r30
     d6e:	ff 27       	eor	r31, r31
     d70:	93 58       	subi	r25, 0x83	; 131
     d72:	5f 4f       	sbci	r21, 0xFF	; 255
     d74:	3a f0       	brmi	.+14     	; 0xd84 <__divsf3_pse+0x70>
     d76:	9e 3f       	cpi	r25, 0xFE	; 254
     d78:	51 05       	cpc	r21, r1
     d7a:	78 f0       	brcs	.+30     	; 0xd9a <__divsf3_pse+0x86>
     d7c:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_inf>
     d80:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__fp_szero>
     d84:	5f 3f       	cpi	r21, 0xFF	; 255
     d86:	e4 f3       	brlt	.-8      	; 0xd80 <__divsf3_pse+0x6c>
     d88:	98 3e       	cpi	r25, 0xE8	; 232
     d8a:	d4 f3       	brlt	.-12     	; 0xd80 <__divsf3_pse+0x6c>
     d8c:	86 95       	lsr	r24
     d8e:	77 95       	ror	r23
     d90:	67 95       	ror	r22
     d92:	b7 95       	ror	r27
     d94:	f7 95       	ror	r31
     d96:	9f 5f       	subi	r25, 0xFF	; 255
     d98:	c9 f7       	brne	.-14     	; 0xd8c <__divsf3_pse+0x78>
     d9a:	88 0f       	add	r24, r24
     d9c:	91 1d       	adc	r25, r1
     d9e:	96 95       	lsr	r25
     da0:	87 95       	ror	r24
     da2:	97 f9       	bld	r25, 7
     da4:	08 95       	ret
     da6:	e1 e0       	ldi	r30, 0x01	; 1
     da8:	66 0f       	add	r22, r22
     daa:	77 1f       	adc	r23, r23
     dac:	88 1f       	adc	r24, r24
     dae:	bb 1f       	adc	r27, r27
     db0:	62 17       	cp	r22, r18
     db2:	73 07       	cpc	r23, r19
     db4:	84 07       	cpc	r24, r20
     db6:	ba 07       	cpc	r27, r26
     db8:	20 f0       	brcs	.+8      	; 0xdc2 <__divsf3_pse+0xae>
     dba:	62 1b       	sub	r22, r18
     dbc:	73 0b       	sbc	r23, r19
     dbe:	84 0b       	sbc	r24, r20
     dc0:	ba 0b       	sbc	r27, r26
     dc2:	ee 1f       	adc	r30, r30
     dc4:	88 f7       	brcc	.-30     	; 0xda8 <__divsf3_pse+0x94>
     dc6:	e0 95       	com	r30
     dc8:	08 95       	ret

00000dca <__fixunssfsi>:
     dca:	0e 94 a5 07 	call	0xf4a	; 0xf4a <__fp_splitA>
     dce:	88 f0       	brcs	.+34     	; 0xdf2 <__fixunssfsi+0x28>
     dd0:	9f 57       	subi	r25, 0x7F	; 127
     dd2:	98 f0       	brcs	.+38     	; 0xdfa <__fixunssfsi+0x30>
     dd4:	b9 2f       	mov	r27, r25
     dd6:	99 27       	eor	r25, r25
     dd8:	b7 51       	subi	r27, 0x17	; 23
     dda:	b0 f0       	brcs	.+44     	; 0xe08 <__fixunssfsi+0x3e>
     ddc:	e1 f0       	breq	.+56     	; 0xe16 <__fixunssfsi+0x4c>
     dde:	66 0f       	add	r22, r22
     de0:	77 1f       	adc	r23, r23
     de2:	88 1f       	adc	r24, r24
     de4:	99 1f       	adc	r25, r25
     de6:	1a f0       	brmi	.+6      	; 0xdee <__fixunssfsi+0x24>
     de8:	ba 95       	dec	r27
     dea:	c9 f7       	brne	.-14     	; 0xdde <__fixunssfsi+0x14>
     dec:	14 c0       	rjmp	.+40     	; 0xe16 <__fixunssfsi+0x4c>
     dee:	b1 30       	cpi	r27, 0x01	; 1
     df0:	91 f0       	breq	.+36     	; 0xe16 <__fixunssfsi+0x4c>
     df2:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__fp_zero>
     df6:	b1 e0       	ldi	r27, 0x01	; 1
     df8:	08 95       	ret
     dfa:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_zero>
     dfe:	67 2f       	mov	r22, r23
     e00:	78 2f       	mov	r23, r24
     e02:	88 27       	eor	r24, r24
     e04:	b8 5f       	subi	r27, 0xF8	; 248
     e06:	39 f0       	breq	.+14     	; 0xe16 <__fixunssfsi+0x4c>
     e08:	b9 3f       	cpi	r27, 0xF9	; 249
     e0a:	cc f3       	brlt	.-14     	; 0xdfe <__fixunssfsi+0x34>
     e0c:	86 95       	lsr	r24
     e0e:	77 95       	ror	r23
     e10:	67 95       	ror	r22
     e12:	b3 95       	inc	r27
     e14:	d9 f7       	brne	.-10     	; 0xe0c <__fixunssfsi+0x42>
     e16:	3e f4       	brtc	.+14     	; 0xe26 <__fixunssfsi+0x5c>
     e18:	90 95       	com	r25
     e1a:	80 95       	com	r24
     e1c:	70 95       	com	r23
     e1e:	61 95       	neg	r22
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	8f 4f       	sbci	r24, 0xFF	; 255
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	08 95       	ret

00000e28 <__floatunsisf>:
     e28:	e8 94       	clt
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <__floatsisf+0x12>

00000e2c <__floatsisf>:
     e2c:	97 fb       	bst	r25, 7
     e2e:	3e f4       	brtc	.+14     	; 0xe3e <__floatsisf+0x12>
     e30:	90 95       	com	r25
     e32:	80 95       	com	r24
     e34:	70 95       	com	r23
     e36:	61 95       	neg	r22
     e38:	7f 4f       	sbci	r23, 0xFF	; 255
     e3a:	8f 4f       	sbci	r24, 0xFF	; 255
     e3c:	9f 4f       	sbci	r25, 0xFF	; 255
     e3e:	99 23       	and	r25, r25
     e40:	a9 f0       	breq	.+42     	; 0xe6c <__floatsisf+0x40>
     e42:	f9 2f       	mov	r31, r25
     e44:	96 e9       	ldi	r25, 0x96	; 150
     e46:	bb 27       	eor	r27, r27
     e48:	93 95       	inc	r25
     e4a:	f6 95       	lsr	r31
     e4c:	87 95       	ror	r24
     e4e:	77 95       	ror	r23
     e50:	67 95       	ror	r22
     e52:	b7 95       	ror	r27
     e54:	f1 11       	cpse	r31, r1
     e56:	f8 cf       	rjmp	.-16     	; 0xe48 <__floatsisf+0x1c>
     e58:	fa f4       	brpl	.+62     	; 0xe98 <__floatsisf+0x6c>
     e5a:	bb 0f       	add	r27, r27
     e5c:	11 f4       	brne	.+4      	; 0xe62 <__floatsisf+0x36>
     e5e:	60 ff       	sbrs	r22, 0
     e60:	1b c0       	rjmp	.+54     	; 0xe98 <__floatsisf+0x6c>
     e62:	6f 5f       	subi	r22, 0xFF	; 255
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	8f 4f       	sbci	r24, 0xFF	; 255
     e68:	9f 4f       	sbci	r25, 0xFF	; 255
     e6a:	16 c0       	rjmp	.+44     	; 0xe98 <__floatsisf+0x6c>
     e6c:	88 23       	and	r24, r24
     e6e:	11 f0       	breq	.+4      	; 0xe74 <__floatsisf+0x48>
     e70:	96 e9       	ldi	r25, 0x96	; 150
     e72:	11 c0       	rjmp	.+34     	; 0xe96 <__floatsisf+0x6a>
     e74:	77 23       	and	r23, r23
     e76:	21 f0       	breq	.+8      	; 0xe80 <__floatsisf+0x54>
     e78:	9e e8       	ldi	r25, 0x8E	; 142
     e7a:	87 2f       	mov	r24, r23
     e7c:	76 2f       	mov	r23, r22
     e7e:	05 c0       	rjmp	.+10     	; 0xe8a <__floatsisf+0x5e>
     e80:	66 23       	and	r22, r22
     e82:	71 f0       	breq	.+28     	; 0xea0 <__floatsisf+0x74>
     e84:	96 e8       	ldi	r25, 0x86	; 134
     e86:	86 2f       	mov	r24, r22
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	2a f0       	brmi	.+10     	; 0xe98 <__floatsisf+0x6c>
     e8e:	9a 95       	dec	r25
     e90:	66 0f       	add	r22, r22
     e92:	77 1f       	adc	r23, r23
     e94:	88 1f       	adc	r24, r24
     e96:	da f7       	brpl	.-10     	; 0xe8e <__floatsisf+0x62>
     e98:	88 0f       	add	r24, r24
     e9a:	96 95       	lsr	r25
     e9c:	87 95       	ror	r24
     e9e:	97 f9       	bld	r25, 7
     ea0:	08 95       	ret

00000ea2 <__fp_cmp>:
     ea2:	99 0f       	add	r25, r25
     ea4:	00 08       	sbc	r0, r0
     ea6:	55 0f       	add	r21, r21
     ea8:	aa 0b       	sbc	r26, r26
     eaa:	e0 e8       	ldi	r30, 0x80	; 128
     eac:	fe ef       	ldi	r31, 0xFE	; 254
     eae:	16 16       	cp	r1, r22
     eb0:	17 06       	cpc	r1, r23
     eb2:	e8 07       	cpc	r30, r24
     eb4:	f9 07       	cpc	r31, r25
     eb6:	c0 f0       	brcs	.+48     	; 0xee8 <__fp_cmp+0x46>
     eb8:	12 16       	cp	r1, r18
     eba:	13 06       	cpc	r1, r19
     ebc:	e4 07       	cpc	r30, r20
     ebe:	f5 07       	cpc	r31, r21
     ec0:	98 f0       	brcs	.+38     	; 0xee8 <__fp_cmp+0x46>
     ec2:	62 1b       	sub	r22, r18
     ec4:	73 0b       	sbc	r23, r19
     ec6:	84 0b       	sbc	r24, r20
     ec8:	95 0b       	sbc	r25, r21
     eca:	39 f4       	brne	.+14     	; 0xeda <__fp_cmp+0x38>
     ecc:	0a 26       	eor	r0, r26
     ece:	61 f0       	breq	.+24     	; 0xee8 <__fp_cmp+0x46>
     ed0:	23 2b       	or	r18, r19
     ed2:	24 2b       	or	r18, r20
     ed4:	25 2b       	or	r18, r21
     ed6:	21 f4       	brne	.+8      	; 0xee0 <__fp_cmp+0x3e>
     ed8:	08 95       	ret
     eda:	0a 26       	eor	r0, r26
     edc:	09 f4       	brne	.+2      	; 0xee0 <__fp_cmp+0x3e>
     ede:	a1 40       	sbci	r26, 0x01	; 1
     ee0:	a6 95       	lsr	r26
     ee2:	8f ef       	ldi	r24, 0xFF	; 255
     ee4:	81 1d       	adc	r24, r1
     ee6:	81 1d       	adc	r24, r1
     ee8:	08 95       	ret

00000eea <__fp_inf>:
     eea:	97 f9       	bld	r25, 7
     eec:	9f 67       	ori	r25, 0x7F	; 127
     eee:	80 e8       	ldi	r24, 0x80	; 128
     ef0:	70 e0       	ldi	r23, 0x00	; 0
     ef2:	60 e0       	ldi	r22, 0x00	; 0
     ef4:	08 95       	ret

00000ef6 <__fp_nan>:
     ef6:	9f ef       	ldi	r25, 0xFF	; 255
     ef8:	80 ec       	ldi	r24, 0xC0	; 192
     efa:	08 95       	ret

00000efc <__fp_pscA>:
     efc:	00 24       	eor	r0, r0
     efe:	0a 94       	dec	r0
     f00:	16 16       	cp	r1, r22
     f02:	17 06       	cpc	r1, r23
     f04:	18 06       	cpc	r1, r24
     f06:	09 06       	cpc	r0, r25
     f08:	08 95       	ret

00000f0a <__fp_pscB>:
     f0a:	00 24       	eor	r0, r0
     f0c:	0a 94       	dec	r0
     f0e:	12 16       	cp	r1, r18
     f10:	13 06       	cpc	r1, r19
     f12:	14 06       	cpc	r1, r20
     f14:	05 06       	cpc	r0, r21
     f16:	08 95       	ret

00000f18 <__fp_round>:
     f18:	09 2e       	mov	r0, r25
     f1a:	03 94       	inc	r0
     f1c:	00 0c       	add	r0, r0
     f1e:	11 f4       	brne	.+4      	; 0xf24 <__fp_round+0xc>
     f20:	88 23       	and	r24, r24
     f22:	52 f0       	brmi	.+20     	; 0xf38 <__fp_round+0x20>
     f24:	bb 0f       	add	r27, r27
     f26:	40 f4       	brcc	.+16     	; 0xf38 <__fp_round+0x20>
     f28:	bf 2b       	or	r27, r31
     f2a:	11 f4       	brne	.+4      	; 0xf30 <__fp_round+0x18>
     f2c:	60 ff       	sbrs	r22, 0
     f2e:	04 c0       	rjmp	.+8      	; 0xf38 <__fp_round+0x20>
     f30:	6f 5f       	subi	r22, 0xFF	; 255
     f32:	7f 4f       	sbci	r23, 0xFF	; 255
     f34:	8f 4f       	sbci	r24, 0xFF	; 255
     f36:	9f 4f       	sbci	r25, 0xFF	; 255
     f38:	08 95       	ret

00000f3a <__fp_split3>:
     f3a:	57 fd       	sbrc	r21, 7
     f3c:	90 58       	subi	r25, 0x80	; 128
     f3e:	44 0f       	add	r20, r20
     f40:	55 1f       	adc	r21, r21
     f42:	59 f0       	breq	.+22     	; 0xf5a <__fp_splitA+0x10>
     f44:	5f 3f       	cpi	r21, 0xFF	; 255
     f46:	71 f0       	breq	.+28     	; 0xf64 <__fp_splitA+0x1a>
     f48:	47 95       	ror	r20

00000f4a <__fp_splitA>:
     f4a:	88 0f       	add	r24, r24
     f4c:	97 fb       	bst	r25, 7
     f4e:	99 1f       	adc	r25, r25
     f50:	61 f0       	breq	.+24     	; 0xf6a <__fp_splitA+0x20>
     f52:	9f 3f       	cpi	r25, 0xFF	; 255
     f54:	79 f0       	breq	.+30     	; 0xf74 <__fp_splitA+0x2a>
     f56:	87 95       	ror	r24
     f58:	08 95       	ret
     f5a:	12 16       	cp	r1, r18
     f5c:	13 06       	cpc	r1, r19
     f5e:	14 06       	cpc	r1, r20
     f60:	55 1f       	adc	r21, r21
     f62:	f2 cf       	rjmp	.-28     	; 0xf48 <__fp_split3+0xe>
     f64:	46 95       	lsr	r20
     f66:	f1 df       	rcall	.-30     	; 0xf4a <__fp_splitA>
     f68:	08 c0       	rjmp	.+16     	; 0xf7a <__fp_splitA+0x30>
     f6a:	16 16       	cp	r1, r22
     f6c:	17 06       	cpc	r1, r23
     f6e:	18 06       	cpc	r1, r24
     f70:	99 1f       	adc	r25, r25
     f72:	f1 cf       	rjmp	.-30     	; 0xf56 <__fp_splitA+0xc>
     f74:	86 95       	lsr	r24
     f76:	71 05       	cpc	r23, r1
     f78:	61 05       	cpc	r22, r1
     f7a:	08 94       	sec
     f7c:	08 95       	ret

00000f7e <__fp_zero>:
     f7e:	e8 94       	clt

00000f80 <__fp_szero>:
     f80:	bb 27       	eor	r27, r27
     f82:	66 27       	eor	r22, r22
     f84:	77 27       	eor	r23, r23
     f86:	cb 01       	movw	r24, r22
     f88:	97 f9       	bld	r25, 7
     f8a:	08 95       	ret

00000f8c <__gesf2>:
     f8c:	0e 94 51 07 	call	0xea2	; 0xea2 <__fp_cmp>
     f90:	08 f4       	brcc	.+2      	; 0xf94 <__gesf2+0x8>
     f92:	8f ef       	ldi	r24, 0xFF	; 255
     f94:	08 95       	ret

00000f96 <__mulsf3>:
     f96:	0e 94 de 07 	call	0xfbc	; 0xfbc <__mulsf3x>
     f9a:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <__fp_round>
     f9e:	0e 94 7e 07 	call	0xefc	; 0xefc <__fp_pscA>
     fa2:	38 f0       	brcs	.+14     	; 0xfb2 <__mulsf3+0x1c>
     fa4:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fp_pscB>
     fa8:	20 f0       	brcs	.+8      	; 0xfb2 <__mulsf3+0x1c>
     faa:	95 23       	and	r25, r21
     fac:	11 f0       	breq	.+4      	; 0xfb2 <__mulsf3+0x1c>
     fae:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_inf>
     fb2:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__fp_nan>
     fb6:	11 24       	eor	r1, r1
     fb8:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__fp_szero>

00000fbc <__mulsf3x>:
     fbc:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__fp_split3>
     fc0:	70 f3       	brcs	.-36     	; 0xf9e <__mulsf3+0x8>

00000fc2 <__mulsf3_pse>:
     fc2:	95 9f       	mul	r25, r21
     fc4:	c1 f3       	breq	.-16     	; 0xfb6 <__mulsf3+0x20>
     fc6:	95 0f       	add	r25, r21
     fc8:	50 e0       	ldi	r21, 0x00	; 0
     fca:	55 1f       	adc	r21, r21
     fcc:	62 9f       	mul	r22, r18
     fce:	f0 01       	movw	r30, r0
     fd0:	72 9f       	mul	r23, r18
     fd2:	bb 27       	eor	r27, r27
     fd4:	f0 0d       	add	r31, r0
     fd6:	b1 1d       	adc	r27, r1
     fd8:	63 9f       	mul	r22, r19
     fda:	aa 27       	eor	r26, r26
     fdc:	f0 0d       	add	r31, r0
     fde:	b1 1d       	adc	r27, r1
     fe0:	aa 1f       	adc	r26, r26
     fe2:	64 9f       	mul	r22, r20
     fe4:	66 27       	eor	r22, r22
     fe6:	b0 0d       	add	r27, r0
     fe8:	a1 1d       	adc	r26, r1
     fea:	66 1f       	adc	r22, r22
     fec:	82 9f       	mul	r24, r18
     fee:	22 27       	eor	r18, r18
     ff0:	b0 0d       	add	r27, r0
     ff2:	a1 1d       	adc	r26, r1
     ff4:	62 1f       	adc	r22, r18
     ff6:	73 9f       	mul	r23, r19
     ff8:	b0 0d       	add	r27, r0
     ffa:	a1 1d       	adc	r26, r1
     ffc:	62 1f       	adc	r22, r18
     ffe:	83 9f       	mul	r24, r19
    1000:	a0 0d       	add	r26, r0
    1002:	61 1d       	adc	r22, r1
    1004:	22 1f       	adc	r18, r18
    1006:	74 9f       	mul	r23, r20
    1008:	33 27       	eor	r19, r19
    100a:	a0 0d       	add	r26, r0
    100c:	61 1d       	adc	r22, r1
    100e:	23 1f       	adc	r18, r19
    1010:	84 9f       	mul	r24, r20
    1012:	60 0d       	add	r22, r0
    1014:	21 1d       	adc	r18, r1
    1016:	82 2f       	mov	r24, r18
    1018:	76 2f       	mov	r23, r22
    101a:	6a 2f       	mov	r22, r26
    101c:	11 24       	eor	r1, r1
    101e:	9f 57       	subi	r25, 0x7F	; 127
    1020:	50 40       	sbci	r21, 0x00	; 0
    1022:	9a f0       	brmi	.+38     	; 0x104a <__mulsf3_pse+0x88>
    1024:	f1 f0       	breq	.+60     	; 0x1062 <__mulsf3_pse+0xa0>
    1026:	88 23       	and	r24, r24
    1028:	4a f0       	brmi	.+18     	; 0x103c <__mulsf3_pse+0x7a>
    102a:	ee 0f       	add	r30, r30
    102c:	ff 1f       	adc	r31, r31
    102e:	bb 1f       	adc	r27, r27
    1030:	66 1f       	adc	r22, r22
    1032:	77 1f       	adc	r23, r23
    1034:	88 1f       	adc	r24, r24
    1036:	91 50       	subi	r25, 0x01	; 1
    1038:	50 40       	sbci	r21, 0x00	; 0
    103a:	a9 f7       	brne	.-22     	; 0x1026 <__mulsf3_pse+0x64>
    103c:	9e 3f       	cpi	r25, 0xFE	; 254
    103e:	51 05       	cpc	r21, r1
    1040:	80 f0       	brcs	.+32     	; 0x1062 <__mulsf3_pse+0xa0>
    1042:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_inf>
    1046:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__fp_szero>
    104a:	5f 3f       	cpi	r21, 0xFF	; 255
    104c:	e4 f3       	brlt	.-8      	; 0x1046 <__mulsf3_pse+0x84>
    104e:	98 3e       	cpi	r25, 0xE8	; 232
    1050:	d4 f3       	brlt	.-12     	; 0x1046 <__mulsf3_pse+0x84>
    1052:	86 95       	lsr	r24
    1054:	77 95       	ror	r23
    1056:	67 95       	ror	r22
    1058:	b7 95       	ror	r27
    105a:	f7 95       	ror	r31
    105c:	e7 95       	ror	r30
    105e:	9f 5f       	subi	r25, 0xFF	; 255
    1060:	c1 f7       	brne	.-16     	; 0x1052 <__mulsf3_pse+0x90>
    1062:	fe 2b       	or	r31, r30
    1064:	88 0f       	add	r24, r24
    1066:	91 1d       	adc	r25, r1
    1068:	96 95       	lsr	r25
    106a:	87 95       	ror	r24
    106c:	97 f9       	bld	r25, 7
    106e:	08 95       	ret

00001070 <__udivmodqi4>:
    1070:	99 1b       	sub	r25, r25
    1072:	79 e0       	ldi	r23, 0x09	; 9
    1074:	04 c0       	rjmp	.+8      	; 0x107e <__udivmodqi4_ep>

00001076 <__udivmodqi4_loop>:
    1076:	99 1f       	adc	r25, r25
    1078:	96 17       	cp	r25, r22
    107a:	08 f0       	brcs	.+2      	; 0x107e <__udivmodqi4_ep>
    107c:	96 1b       	sub	r25, r22

0000107e <__udivmodqi4_ep>:
    107e:	88 1f       	adc	r24, r24
    1080:	7a 95       	dec	r23
    1082:	c9 f7       	brne	.-14     	; 0x1076 <__udivmodqi4_loop>
    1084:	80 95       	com	r24
    1086:	08 95       	ret

00001088 <__umulhisi3>:
    1088:	a2 9f       	mul	r26, r18
    108a:	b0 01       	movw	r22, r0
    108c:	b3 9f       	mul	r27, r19
    108e:	c0 01       	movw	r24, r0
    1090:	a3 9f       	mul	r26, r19
    1092:	70 0d       	add	r23, r0
    1094:	81 1d       	adc	r24, r1
    1096:	11 24       	eor	r1, r1
    1098:	91 1d       	adc	r25, r1
    109a:	b2 9f       	mul	r27, r18
    109c:	70 0d       	add	r23, r0
    109e:	81 1d       	adc	r24, r1
    10a0:	11 24       	eor	r1, r1
    10a2:	91 1d       	adc	r25, r1
    10a4:	08 95       	ret

000010a6 <_exit>:
    10a6:	f8 94       	cli

000010a8 <__stop_program>:
    10a8:	ff cf       	rjmp	.-2      	; 0x10a8 <__stop_program>
