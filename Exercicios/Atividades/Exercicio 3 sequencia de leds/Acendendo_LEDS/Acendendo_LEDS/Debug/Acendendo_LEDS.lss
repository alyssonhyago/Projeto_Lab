
Acendendo_LEDS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000034e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000034e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000380  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000003c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c5d  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000694  00000000  00000000  0000103d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000048d  00000000  00000000  000016d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001b60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003db  00000000  00000000  00001b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000784  00000000  00000000  00001f5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000026e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define LED5 PD4
#define BOTAO PD7 //BOTAO é o substituto de PD7 na programação

int main()
{
	DDRD = 0x1F; //configura o PORTD, PD0 a PD3 como saída, os demais pinos entradas
  80:	8f e1       	ldi	r24, 0x1F	; 31
  82:	8a b9       	out	0x0a, r24	; 10
	PORTD= 0xFF; //habilita o pull-up para o botão e apaga o LED 
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	8b b9       	out	0x0b, r24	; 11
	int i = 1;
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
	
	
	while(1) 
	{
		
		if(!tst_bit(PIND,BOTAO))//se o botão for pressionado executa o if
  8c:	4f 99       	sbic	0x09, 7	; 9
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <main+0x28>
		{
			
			while(!tst_bit(PIND,BOTAO)); //fica preso até soltar o botão
  90:	4f 9b       	sbis	0x09, 7	; 9
  92:	fe cf       	rjmp	.-4      	; 0x90 <main+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	31 ee       	ldi	r19, 0xE1	; 225
  98:	44 e0       	ldi	r20, 0x04	; 4
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	30 40       	sbci	r19, 0x00	; 0
  9e:	40 40       	sbci	r20, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x1a>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x24>
  a4:	00 00       	nop
			_delay_ms(100);
			i++;
  a6:	01 96       	adiw	r24, 0x01	; 1
		}
		if (i > 3)
  a8:	84 30       	cpi	r24, 0x04	; 4
  aa:	91 05       	cpc	r25, r1
  ac:	0c f0       	brlt	.+2      	; 0xb0 <main+0x30>
  ae:	19 c1       	rjmp	.+562    	; 0x2e2 <main+0x262>
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	31 ee       	ldi	r19, 0xE1	; 225
  b4:	44 e0       	ldi	r20, 0x04	; 4
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
  ba:	40 40       	sbci	r20, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x36>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x40>
  c0:	00 00       	nop
		{
			i = 1;
		}
			_delay_ms(100); //atraso de 10 ms para eliminar o ruído do botão
		
			switch (i)	// switch para selecionar qual sequencia de led será apresentada
  c2:	82 30       	cpi	r24, 0x02	; 2
  c4:	91 05       	cpc	r25, r1
  c6:	09 f4       	brne	.+2      	; 0xca <main+0x4a>
  c8:	4f c0       	rjmp	.+158    	; 0x168 <main+0xe8>
  ca:	83 30       	cpi	r24, 0x03	; 3
  cc:	91 05       	cpc	r25, r1
  ce:	09 f4       	brne	.+2      	; 0xd2 <main+0x52>
  d0:	8f c0       	rjmp	.+286    	; 0x1f0 <main+0x170>
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	91 05       	cpc	r25, r1
  d6:	d1 f6       	brne	.-76     	; 0x8c <main+0xc>
			{
			
				case 1:
						if(tst_bit(PORTD,LED1))		//se o LED estiver apagado, liga o LED
  d8:	58 9b       	sbis	0x0b, 0	; 11
  da:	3e c0       	rjmp	.+124    	; 0x158 <main+0xd8>
  dc:	8f ef       	ldi	r24, 0xFF	; 255
  de:	91 ee       	ldi	r25, 0xE1	; 225
  e0:	24 e0       	ldi	r18, 0x04	; 4
  e2:	81 50       	subi	r24, 0x01	; 1
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	20 40       	sbci	r18, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x62>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x6c>
  ec:	00 00       	nop
						{ 
						_delay_ms(100);
						clr_bit(PORTD,LED5);
  ee:	5c 98       	cbi	0x0b, 4	; 11
  f0:	3f ef       	ldi	r19, 0xFF	; 255
  f2:	41 ee       	ldi	r20, 0xE1	; 225
  f4:	84 e0       	ldi	r24, 0x04	; 4
  f6:	31 50       	subi	r19, 0x01	; 1
  f8:	40 40       	sbci	r20, 0x00	; 0
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x76>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x80>
 100:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED4);
 102:	5b 98       	cbi	0x0b, 3	; 11
 104:	9f ef       	ldi	r25, 0xFF	; 255
 106:	21 ee       	ldi	r18, 0xE1	; 225
 108:	34 e0       	ldi	r19, 0x04	; 4
 10a:	91 50       	subi	r25, 0x01	; 1
 10c:	20 40       	sbci	r18, 0x00	; 0
 10e:	30 40       	sbci	r19, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x8a>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x94>
 114:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED3);
 116:	5a 98       	cbi	0x0b, 2	; 11
 118:	4f ef       	ldi	r20, 0xFF	; 255
 11a:	81 ee       	ldi	r24, 0xE1	; 225
 11c:	94 e0       	ldi	r25, 0x04	; 4
 11e:	41 50       	subi	r20, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x9e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0xa8>
 128:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED2);
 12a:	59 98       	cbi	0x0b, 1	; 11
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	31 ee       	ldi	r19, 0xE1	; 225
 130:	44 e0       	ldi	r20, 0x04	; 4
 132:	21 50       	subi	r18, 0x01	; 1
 134:	30 40       	sbci	r19, 0x00	; 0
 136:	40 40       	sbci	r20, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0xb2>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xbc>
 13c:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED1);
 13e:	58 98       	cbi	0x0b, 0	; 11
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	91 ee       	ldi	r25, 0xE1	; 225
 144:	24 e0       	ldi	r18, 0x04	; 4
 146:	81 50       	subi	r24, 0x01	; 1
 148:	90 40       	sbci	r25, 0x00	; 0
 14a:	20 40       	sbci	r18, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0xc6>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0xd0>
 150:	00 00       	nop
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	9a cf       	rjmp	.-204    	; 0x8c <main+0xc>
						_delay_ms(100);
						}
						else //se não apaga o LED
						{
						set_bit(PORTD,LED5);
 158:	5c 9a       	sbi	0x0b, 4	; 11
						set_bit(PORTD,LED4);
 15a:	5b 9a       	sbi	0x0b, 3	; 11
						set_bit(PORTD,LED3);
 15c:	5a 9a       	sbi	0x0b, 2	; 11
						set_bit(PORTD,LED2);
 15e:	59 9a       	sbi	0x0b, 1	; 11
						set_bit(PORTD,LED1);
 160:	58 9a       	sbi	0x0b, 0	; 11
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	92 cf       	rjmp	.-220    	; 0x8c <main+0xc>
						} 	
					break;
				case 2:
						if(tst_bit(PORTD,LED1))	//se o LED estiver apagado, liga o LED
 168:	58 9b       	sbis	0x0b, 0	; 11
 16a:	3c c0       	rjmp	.+120    	; 0x1e4 <main+0x164>
 16c:	3f ef       	ldi	r19, 0xFF	; 255
 16e:	41 ee       	ldi	r20, 0xE1	; 225
 170:	24 e0       	ldi	r18, 0x04	; 4
 172:	31 50       	subi	r19, 0x01	; 1
 174:	40 40       	sbci	r20, 0x00	; 0
 176:	20 40       	sbci	r18, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0xf2>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0xfc>
 17c:	00 00       	nop
						{ 
						_delay_ms(100);
						clr_bit(PORTD,LED1);
 17e:	58 98       	cbi	0x0b, 0	; 11
 180:	3f ef       	ldi	r19, 0xFF	; 255
 182:	41 ee       	ldi	r20, 0xE1	; 225
 184:	24 e0       	ldi	r18, 0x04	; 4
 186:	31 50       	subi	r19, 0x01	; 1
 188:	40 40       	sbci	r20, 0x00	; 0
 18a:	20 40       	sbci	r18, 0x00	; 0
 18c:	e1 f7       	brne	.-8      	; 0x186 <main+0x106>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <main+0x110>
 190:	00 00       	nop
				
						_delay_ms(100);
						clr_bit(PORTD,LED2);
 192:	59 98       	cbi	0x0b, 1	; 11
 194:	3f ef       	ldi	r19, 0xFF	; 255
 196:	41 ee       	ldi	r20, 0xE1	; 225
 198:	24 e0       	ldi	r18, 0x04	; 4
 19a:	31 50       	subi	r19, 0x01	; 1
 19c:	40 40       	sbci	r20, 0x00	; 0
 19e:	20 40       	sbci	r18, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0x11a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x124>
 1a4:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED3);
 1a6:	5a 98       	cbi	0x0b, 2	; 11
 1a8:	3f ef       	ldi	r19, 0xFF	; 255
 1aa:	41 ee       	ldi	r20, 0xE1	; 225
 1ac:	24 e0       	ldi	r18, 0x04	; 4
 1ae:	31 50       	subi	r19, 0x01	; 1
 1b0:	40 40       	sbci	r20, 0x00	; 0
 1b2:	20 40       	sbci	r18, 0x00	; 0
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <main+0x12e>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <main+0x138>
 1b8:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED4);
 1ba:	5b 98       	cbi	0x0b, 3	; 11
 1bc:	3f ef       	ldi	r19, 0xFF	; 255
 1be:	41 ee       	ldi	r20, 0xE1	; 225
 1c0:	24 e0       	ldi	r18, 0x04	; 4
 1c2:	31 50       	subi	r19, 0x01	; 1
 1c4:	40 40       	sbci	r20, 0x00	; 0
 1c6:	20 40       	sbci	r18, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x142>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x14c>
 1cc:	00 00       	nop
						
						_delay_ms(100);
						clr_bit(PORTD,LED5);
 1ce:	5c 98       	cbi	0x0b, 4	; 11
 1d0:	3f ef       	ldi	r19, 0xFF	; 255
 1d2:	41 ee       	ldi	r20, 0xE1	; 225
 1d4:	24 e0       	ldi	r18, 0x04	; 4
 1d6:	31 50       	subi	r19, 0x01	; 1
 1d8:	40 40       	sbci	r20, 0x00	; 0
 1da:	20 40       	sbci	r18, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x156>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x160>
 1e0:	00 00       	nop
 1e2:	54 cf       	rjmp	.-344    	; 0x8c <main+0xc>
						_delay_ms(100);
						}
					   else //se não apaga o LED
						{
						set_bit(PORTD,LED1);
 1e4:	58 9a       	sbi	0x0b, 0	; 11
						set_bit(PORTD,LED2);
 1e6:	59 9a       	sbi	0x0b, 1	; 11
						set_bit(PORTD,LED3);
 1e8:	5a 9a       	sbi	0x0b, 2	; 11
						set_bit(PORTD,LED4);
 1ea:	5b 9a       	sbi	0x0b, 3	; 11
						set_bit(PORTD,LED5);
 1ec:	5c 9a       	sbi	0x0b, 4	; 11
 1ee:	4e cf       	rjmp	.-356    	; 0x8c <main+0xc>
						}	
		
					break;	
			  case 3:
			
					if(tst_bit(PORTD,LED1))		//se o LED estiver apagado, liga o LED
 1f0:	58 9b       	sbis	0x0b, 0	; 11
 1f2:	4c cf       	rjmp	.-360    	; 0x8c <main+0xc>
					{
						
						clr_bit(PORTD,LED1);
 1f4:	58 98       	cbi	0x0b, 0	; 11
 1f6:	3f ef       	ldi	r19, 0xFF	; 255
 1f8:	41 ee       	ldi	r20, 0xE1	; 225
 1fa:	24 e0       	ldi	r18, 0x04	; 4
 1fc:	31 50       	subi	r19, 0x01	; 1
 1fe:	40 40       	sbci	r20, 0x00	; 0
 200:	20 40       	sbci	r18, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0x17c>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x186>
 206:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED2);
 208:	59 98       	cbi	0x0b, 1	; 11
 20a:	3f ef       	ldi	r19, 0xFF	; 255
 20c:	41 ee       	ldi	r20, 0xE1	; 225
 20e:	24 e0       	ldi	r18, 0x04	; 4
 210:	31 50       	subi	r19, 0x01	; 1
 212:	40 40       	sbci	r20, 0x00	; 0
 214:	20 40       	sbci	r18, 0x00	; 0
 216:	e1 f7       	brne	.-8      	; 0x210 <main+0x190>
 218:	00 c0       	rjmp	.+0      	; 0x21a <main+0x19a>
 21a:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED3);
 21c:	5a 98       	cbi	0x0b, 2	; 11
 21e:	3f ef       	ldi	r19, 0xFF	; 255
 220:	41 ee       	ldi	r20, 0xE1	; 225
 222:	24 e0       	ldi	r18, 0x04	; 4
 224:	31 50       	subi	r19, 0x01	; 1
 226:	40 40       	sbci	r20, 0x00	; 0
 228:	20 40       	sbci	r18, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <main+0x1a4>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <main+0x1ae>
 22e:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED4);
 230:	5b 98       	cbi	0x0b, 3	; 11
 232:	3f ef       	ldi	r19, 0xFF	; 255
 234:	41 ee       	ldi	r20, 0xE1	; 225
 236:	24 e0       	ldi	r18, 0x04	; 4
 238:	31 50       	subi	r19, 0x01	; 1
 23a:	40 40       	sbci	r20, 0x00	; 0
 23c:	20 40       	sbci	r18, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x1b8>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x1c2>
 242:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED5);
 244:	5c 98       	cbi	0x0b, 4	; 11
 246:	3f ef       	ldi	r19, 0xFF	; 255
 248:	41 ee       	ldi	r20, 0xE1	; 225
 24a:	24 e0       	ldi	r18, 0x04	; 4
 24c:	31 50       	subi	r19, 0x01	; 1
 24e:	40 40       	sbci	r20, 0x00	; 0
 250:	20 40       	sbci	r18, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <main+0x1cc>
 254:	00 c0       	rjmp	.+0      	; 0x256 <main+0x1d6>
 256:	00 00       	nop
						_delay_ms(100);
						set_bit(PORTD,LED1);
 258:	58 9a       	sbi	0x0b, 0	; 11
						set_bit(PORTD,LED2);
 25a:	59 9a       	sbi	0x0b, 1	; 11
						set_bit(PORTD,LED3);
 25c:	5a 9a       	sbi	0x0b, 2	; 11
						set_bit(PORTD,LED4);
 25e:	5b 9a       	sbi	0x0b, 3	; 11
 260:	3f ef       	ldi	r19, 0xFF	; 255
 262:	43 ec       	ldi	r20, 0xC3	; 195
 264:	29 e0       	ldi	r18, 0x09	; 9
 266:	31 50       	subi	r19, 0x01	; 1
 268:	40 40       	sbci	r20, 0x00	; 0
 26a:	20 40       	sbci	r18, 0x00	; 0
 26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x1e6>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x1f0>
 270:	00 00       	nop
						//set_bit(PORTD,LED5);
						_delay_ms(200);
						clr_bit(PORTD,LED5);
 272:	5c 98       	cbi	0x0b, 4	; 11
 274:	3f ef       	ldi	r19, 0xFF	; 255
 276:	41 ee       	ldi	r20, 0xE1	; 225
 278:	24 e0       	ldi	r18, 0x04	; 4
 27a:	31 50       	subi	r19, 0x01	; 1
 27c:	40 40       	sbci	r20, 0x00	; 0
 27e:	20 40       	sbci	r18, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0x1fa>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x204>
 284:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED4);
 286:	5b 98       	cbi	0x0b, 3	; 11
 288:	3f ef       	ldi	r19, 0xFF	; 255
 28a:	41 ee       	ldi	r20, 0xE1	; 225
 28c:	24 e0       	ldi	r18, 0x04	; 4
 28e:	31 50       	subi	r19, 0x01	; 1
 290:	40 40       	sbci	r20, 0x00	; 0
 292:	20 40       	sbci	r18, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <main+0x20e>
 296:	00 c0       	rjmp	.+0      	; 0x298 <main+0x218>
 298:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED3);
 29a:	5a 98       	cbi	0x0b, 2	; 11
 29c:	3f ef       	ldi	r19, 0xFF	; 255
 29e:	41 ee       	ldi	r20, 0xE1	; 225
 2a0:	24 e0       	ldi	r18, 0x04	; 4
 2a2:	31 50       	subi	r19, 0x01	; 1
 2a4:	40 40       	sbci	r20, 0x00	; 0
 2a6:	20 40       	sbci	r18, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0x222>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0x22c>
 2ac:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED2);
 2ae:	59 98       	cbi	0x0b, 1	; 11
 2b0:	3f ef       	ldi	r19, 0xFF	; 255
 2b2:	41 ee       	ldi	r20, 0xE1	; 225
 2b4:	24 e0       	ldi	r18, 0x04	; 4
 2b6:	31 50       	subi	r19, 0x01	; 1
 2b8:	40 40       	sbci	r20, 0x00	; 0
 2ba:	20 40       	sbci	r18, 0x00	; 0
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <main+0x236>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <main+0x240>
 2c0:	00 00       	nop
						_delay_ms(100);
						clr_bit(PORTD,LED1);
 2c2:	58 98       	cbi	0x0b, 0	; 11
 2c4:	3f ef       	ldi	r19, 0xFF	; 255
 2c6:	41 ee       	ldi	r20, 0xE1	; 225
 2c8:	24 e0       	ldi	r18, 0x04	; 4
 2ca:	31 50       	subi	r19, 0x01	; 1
 2cc:	40 40       	sbci	r20, 0x00	; 0
 2ce:	20 40       	sbci	r18, 0x00	; 0
 2d0:	e1 f7       	brne	.-8      	; 0x2ca <main+0x24a>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <main+0x254>
 2d4:	00 00       	nop
						_delay_ms(100);
						set_bit(PORTD,LED5);
 2d6:	5c 9a       	sbi	0x0b, 4	; 11
						set_bit(PORTD,LED4);
 2d8:	5b 9a       	sbi	0x0b, 3	; 11
						set_bit(PORTD,LED3);
 2da:	5a 9a       	sbi	0x0b, 2	; 11
						set_bit(PORTD,LED2);
 2dc:	59 9a       	sbi	0x0b, 1	; 11
						set_bit(PORTD,LED1);
 2de:	58 9a       	sbi	0x0b, 0	; 11
 2e0:	d5 ce       	rjmp	.-598    	; 0x8c <main+0xc>
 2e2:	3f ef       	ldi	r19, 0xFF	; 255
 2e4:	41 ee       	ldi	r20, 0xE1	; 225
 2e6:	84 e0       	ldi	r24, 0x04	; 4
 2e8:	31 50       	subi	r19, 0x01	; 1
 2ea:	40 40       	sbci	r20, 0x00	; 0
 2ec:	80 40       	sbci	r24, 0x00	; 0
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <main+0x268>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <main+0x272>
 2f2:	00 00       	nop
 2f4:	f1 ce       	rjmp	.-542    	; 0xd8 <main+0x58>

000002f6 <_exit>:
 2f6:	f8 94       	cli

000002f8 <__stop_program>:
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <__stop_program>
